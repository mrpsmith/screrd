{
  "swagger": "2.0",
  "info": {
    "title": "Ship.Cars API",
    "description": "Test description",
    "termsOfService": "https://www.google.com/policies/terms/",
    "contact": {
      "email": "contact@snippets.local"
    },
    "license": {
      "name": "BSD License"
    },
    "version": "v1"
  },
  "host": "qa.ship.cars",
  "schemes": [
    "https"
  ],
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/coreapi+json"
  ],
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic": []
    }
  ],
  "paths": {
    "/archived_postings/": {
      "get": {
        "operationId": "archived_postings_list",
        "description": "Retrieves a list of archived loadboard postings.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ArchivedPosting"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "archived_postings"
        ]
      },
      "parameters": []
    },
    "/archived_postings/{original_pk}/": {
      "get": {
        "operationId": "archived_postings_read",
        "description": "Retrieves an identified archived loadboard posting.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArchivedPosting"
            }
          }
        },
        "tags": [
          "archived_postings"
        ]
      },
      "parameters": [
        {
          "name": "original_pk",
          "in": "path",
          "description": "The unique identifier of the posting.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/attachments/": {
      "get": {
        "operationId": "attachments_list",
        "description": "Retrieves a list of attachments.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Attachment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "post": {
        "operationId": "attachments_create",
        "description": "Creates a new attachment.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "parameters": []
    },
    "/attachments/download_gallery_single/": {
      "parameters": []
    },
    "/attachments/{id}/": {
      "get": {
        "operationId": "attachments_read",
        "description": "Retrieves an identified attachment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "put": {
        "operationId": "attachments_update",
        "description": "Updates an identified attachment.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "patch": {
        "operationId": "attachments_partial_update",
        "description": "Updates partially an identified attachment.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "delete": {
        "operationId": "attachments_delete",
        "description": "Deletes an identified attachment.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this attachment.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/attachments/{id}/download/": {
      "get": {
        "operationId": "attachments_download",
        "description": "Downloads an identified attachment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this attachment.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/attachments/{id}/replace_damages/": {
      "post": {
        "operationId": "attachments_replace_damages",
        "description": "Replaces the list of damages in an identified attachment.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "tags": [
          "attachments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this attachment.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/auth_check/": {
      "get": {
        "operationId": "auth_check_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth_check"
        ]
      },
      "parameters": []
    },
    "/broker_loads/": {
      "get": {
        "operationId": "broker_loads_list",
        "description": "Retrieves a list of loads. Available only to shippers.",
        "parameters": [
          {
            "name": "late",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "active_revision__isnull",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickup_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivery_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "inoperable",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enclosed_trailer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "number_vehicles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ship_within",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Load"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "broker_loads"
        ]
      },
      "post": {
        "operationId": "broker_loads_create",
        "description": "Creates a new load. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "broker_loads"
        ]
      },
      "parameters": []
    },
    "/broker_loads/{broker_load_id}/": {
      "get": {
        "operationId": "broker_loads_read",
        "description": "Retrieves an identified load (using the shipper's ID). Available only to shippers.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "broker_loads"
        ]
      },
      "put": {
        "operationId": "broker_loads_update",
        "description": "Updates an identified load (using the shipper's ID). Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "broker_loads"
        ]
      },
      "patch": {
        "operationId": "broker_loads_partial_update",
        "description": "Updates partially an identified load (using the shipper's ID). Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "broker_loads"
        ]
      },
      "delete": {
        "operationId": "broker_loads_delete",
        "description": "Deletes an identified load (using the shipper's ID). Available only to shippers.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "broker_loads"
        ]
      },
      "parameters": [
        {
          "name": "broker_load_id",
          "in": "path",
          "description": "The shipper company's unique identifier of the load.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/carriers/reinvite_company_owner/": {
      "post": {
        "operationId": "carriers_reinvite_company_owner",
        "description": "Resends the invitation to join Ship.Cars to a specific carrier company owner.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "carriers"
        ]
      },
      "parameters": []
    },
    "/carriers/{dot_number}/": {
      "get": {
        "operationId": "carriers_read",
        "description": "Retrieves a carrier company identified by its USDOT number.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "carriers"
        ]
      },
      "parameters": [
        {
          "name": "dot_number",
          "in": "path",
          "description": "The company's USDOT number.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/carriers/{dot_number}/delete_label/": {
      "post": {
        "operationId": "carriers_delete_label",
        "description": "Removes a label applied to a carrier company identified by its USDOT number.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyDeleteLabel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompanyDeleteLabel"
            }
          }
        },
        "tags": [
          "carriers"
        ]
      },
      "parameters": [
        {
          "name": "dot_number",
          "in": "path",
          "description": "The company's USDOT number.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/carriers/{dot_number}/labels/": {
      "get": {
        "operationId": "carriers_labels",
        "description": "Retrieves the list of labels applied to a carrier company identified by its USDOT number.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "carriers"
        ]
      },
      "parameters": [
        {
          "name": "dot_number",
          "in": "path",
          "description": "The company's USDOT number.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/carriers/{dot_number}/set_label/": {
      "post": {
        "operationId": "carriers_set_label",
        "description": "Applies a label to a carrier company identified by its USDOT number.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySetLabel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompanySetLabel"
            }
          }
        },
        "tags": [
          "carriers"
        ]
      },
      "parameters": [
        {
          "name": "dot_number",
          "in": "path",
          "description": "The company's USDOT number.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/carriers/{dot_number}/set_labels/": {
      "post": {
        "operationId": "carriers_set_labels",
        "description": "Applies a list of labels to a carrier company identified by its USDOT number.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyLabels"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompanyLabels"
            }
          }
        },
        "tags": [
          "carriers"
        ]
      },
      "parameters": [
        {
          "name": "dot_number",
          "in": "path",
          "description": "The company's USDOT number.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/changes/": {
      "get": {
        "operationId": "changes_list",
        "description": "Retrieves a list of changes to loads.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Change"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "changes"
        ]
      },
      "parameters": []
    },
    "/changes/{id}/": {
      "get": {
        "operationId": "changes_read",
        "description": "Retrieves an identified change to a load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Change"
            }
          }
        },
        "tags": [
          "changes"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this change.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/": {
      "get": {
        "operationId": "companies_list",
        "description": "Retrieves a list of companies.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Company"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": []
    },
    "/companies/download_invoices/": {
      "get": {
        "operationId": "companies_download_invoices",
        "description": "Downloads the invoices for the user's company for a specified period of time.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DownloadInvoices"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": []
    },
    "/companies/{id}/": {
      "get": {
        "operationId": "companies_read",
        "description": "Retrieves an identified company.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "put": {
        "operationId": "companies_update",
        "description": "Updates an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "patch": {
        "operationId": "companies_partial_update",
        "description": "Updates partially an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/delete_label/": {
      "post": {
        "operationId": "companies_delete_label",
        "description": "Removes a label applied to an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyDeleteLabel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompanyDeleteLabel"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/download_single_invoice/": {
      "get": {
        "operationId": "companies_download_single_invoice",
        "description": "Downloads the latest invoice for an identified company. FIX_ME Is it the latest?",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/labels/": {
      "get": {
        "operationId": "companies_labels",
        "description": "Retrieves the list of labels applied to an identified company.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/set_company_logo/": {
      "post": {
        "operationId": "companies_set_company_logo",
        "description": "Sets the company logo for an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetCompanyLogo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetCompanyLogo"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/set_invoice_generation/": {
      "post": {
        "operationId": "companies_set_invoice_generation",
        "description": "Enables and disables the automatic invoice generation for an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetInvoiceGeneration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetInvoiceGeneration"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/set_label/": {
      "post": {
        "operationId": "companies_set_label",
        "description": "Applies a label to an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySetLabel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompanySetLabel"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/set_labels/": {
      "post": {
        "operationId": "companies_set_labels",
        "description": "Applies a list of labels to an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyLabels"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CompanyLabels"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/companies/{id}/set_terms_of_service/": {
      "post": {
        "operationId": "companies_set_terms_of_service",
        "description": "Sets the terms of service for an identified company.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetTermsOfService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetTermsOfService"
            }
          }
        },
        "tags": [
          "companies"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/event_subscriptions/": {
      "get": {
        "operationId": "event_subscriptions_list",
        "description": "Retrieves a list of event subscriptions.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EventSubscription"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "event_subscriptions"
        ]
      },
      "post": {
        "operationId": "event_subscriptions_create",
        "description": "Creates a new event subscription.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        },
        "tags": [
          "event_subscriptions"
        ]
      },
      "parameters": []
    },
    "/event_subscriptions/{id}/": {
      "get": {
        "operationId": "event_subscriptions_read",
        "description": "Retrieves an identified event subscription.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        },
        "tags": [
          "event_subscriptions"
        ]
      },
      "put": {
        "operationId": "event_subscriptions_update",
        "description": "Updates an identified event subscription.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        },
        "tags": [
          "event_subscriptions"
        ]
      },
      "patch": {
        "operationId": "event_subscriptions_partial_update",
        "description": "Updates partially an identified event subscription.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          }
        },
        "tags": [
          "event_subscriptions"
        ]
      },
      "delete": {
        "operationId": "event_subscriptions_delete",
        "description": "Deletes an identified event subscription.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "event_subscriptions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this event subscription.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/": {
      "get": {
        "operationId": "loads_list",
        "description": "Retrieves a list of loads.",
        "parameters": [
          {
            "name": "late",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "active_revision__isnull",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickup_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivery_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "inoperable",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enclosed_trailer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "number_vehicles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ship_within",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Load"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "post": {
        "operationId": "loads_create",
        "description": "Creates a new load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": []
    },
    "/loads/create_fake_load/": {
      "parameters": []
    },
    "/loads/generate_demo/": {
      "post": {
        "operationId": "loads_generate_demo",
        "description": "FIX_ME Generates a demo load...",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": []
    },
    "/loads/generate_fake_load/": {
      "parameters": []
    },
    "/loads/parse_file_to_order/": {
      "parameters": []
    },
    "/loads/shipper_emails/": {
      "get": {
        "operationId": "loads_shipper_emails",
        "description": "",
        "parameters": [
          {
            "name": "late",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "active_revision__isnull",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickup_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivery_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "inoperable",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enclosed_trailer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "number_vehicles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ship_within",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Load"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": []
    },
    "/loads/start_demo/": {
      "post": {
        "operationId": "loads_start_demo",
        "description": "Starts the demo load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": []
    },
    "/loads/stop_demo/": {
      "post": {
        "operationId": "loads_stop_demo",
        "description": "Stops the demo load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": []
    },
    "/loads/{id}/": {
      "get": {
        "operationId": "loads_read",
        "description": "Retrieves an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "put": {
        "operationId": "loads_update",
        "description": "Updates an identified load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "patch": {
        "operationId": "loads_partial_update",
        "description": "Updates partially an identified load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "delete": {
        "operationId": "loads_delete",
        "description": "Deletes an identified load.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/accept/": {
      "post": {
        "operationId": "loads_accept",
        "description": "Accepts a dispatched identified load. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/assign/": {
      "post": {
        "operationId": "loads_assign",
        "description": "Assigns a driver to an accepted identified load. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignDriver"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssignDriver"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/attachments/": {
      "get": {
        "operationId": "loads_attachments",
        "description": "Retrieves the list of files attached to an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/broker_cancel/": {
      "post": {
        "operationId": "loads_broker_cancel",
        "description": "Cancels and archives an identified load. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/cancel/": {
      "post": {
        "operationId": "loads_cancel",
        "description": "Cancels an accepted identified load. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CancelOrder"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/decline/": {
      "post": {
        "operationId": "loads_decline",
        "description": "Declines a dispatched identified load. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeclineOrder"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/delete_attachments/": {
      "post": {
        "operationId": "loads_delete_attachments",
        "description": "Deletes the attached files of an identified load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/demo_deliver/": {
      "post": {
        "operationId": "loads_demo_deliver",
        "description": "Marks an identified demo load as delivered. FIX_ME",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/demo_pickup/": {
      "post": {
        "operationId": "loads_demo_pickup",
        "description": "Marks an identified demo load as picked up. FIX_ME",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/dispatch_to_carrier/": {
      "post": {
        "operationId": "loads_dispatch_to_carrier",
        "description": "Dispatches an identified load to a specific carrier. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispatch"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispatch"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/download_attachments/": {
      "get": {
        "operationId": "loads_download_attachments",
        "description": "Downloads all files attached to an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/download_invoice/": {
      "get": {
        "operationId": "loads_download_invoice",
        "description": "Downloads the generated invoice for an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/driver_seen/": {
      "post": {
        "operationId": "loads_driver_seen",
        "description": "Marks an identified load as seen by the driver. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/events/": {
      "get": {
        "operationId": "loads_events",
        "description": "Retrieves the list of events from the activity log for an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/generate_dispatch_sheet/": {
      "post": {
        "operationId": "loads_generate_dispatch_sheet",
        "description": "Generates a dispatch contract for an identified load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/get_driver_instructions/": {
      "get": {
        "operationId": "loads_get_driver_instructions",
        "description": "Retrieves the driver instructions from an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/invalidate_delivery/": {
      "post": {
        "operationId": "loads_invalidate_delivery",
        "description": "Invalidates the delivery of an identified load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/invalidate_pickup/": {
      "post": {
        "operationId": "loads_invalidate_pickup",
        "description": "Invalidates the pickup of an identified load.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/mark_paid/": {
      "post": {
        "operationId": "loads_mark_paid",
        "description": "Marks an identified load as paid. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/orders/": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/post_to_loadboard/": {
      "post": {
        "operationId": "loads_post_to_loadboard",
        "description": "Posts an identified load to the loadboard. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/reassign/": {
      "post": {
        "operationId": "loads_reassign",
        "description": "Reassigns an identified load to another driver. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignDriver"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssignDriver"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/revisions/": {
      "get": {
        "operationId": "loads_revisions",
        "description": "Retrieves the list of revisions for an identified load.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/send_bol/": {
      "post": {
        "operationId": "loads_send_bol",
        "description": "Sends a copy of the load BOL via email.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendBoL"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SendBoL"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/set_driver_instructions/": {
      "post": {
        "operationId": "loads_set_driver_instructions",
        "description": "Sets the driver instructions for an identified load. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DriverInstructions"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DriverInstructions"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/unassign/": {
      "post": {
        "operationId": "loads_unassign",
        "description": "Unassigns an identified load from a driver. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/unverify/": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/vehicles/": {
      "get": {
        "operationId": "loads_vehicles_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "post": {
        "operationId": "loads_vehicles_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "loads"
        ]
      },
      "delete": {
        "operationId": "loads_vehicles_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "loads"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/loads/{id}/verify/": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/negotiations/": {
      "get": {
        "operationId": "negotiations_list",
        "description": "Retrieves a list of negotiations for loadboard postings.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Negotiation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "negotiations"
        ]
      },
      "parameters": []
    },
    "/negotiations/{id}/": {
      "get": {
        "operationId": "negotiations_read",
        "description": "Retrieves an identified negotiation thread for a loadboard posting.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Negotiation"
            }
          }
        },
        "tags": [
          "negotiations"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this negotiation.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/negotiations/{id}/accept/": {
      "post": {
        "operationId": "negotiations_accept",
        "description": "Accepts the latest offer in an identified negotiation thread for a loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NegotiationAccept"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NegotiationAccept"
            }
          }
        },
        "tags": [
          "negotiations"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this negotiation.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/negotiations/{id}/cancel/": {
      "post": {
        "operationId": "negotiations_cancel",
        "description": "Cancels an identified negotiation thread for a loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "negotiations"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this negotiation.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/notifications/": {
      "get": {
        "operationId": "notifications_list",
        "description": "Retrieves a list of notifications for events.",
        "parameters": [
          {
            "name": "event_type__category",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Notification"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": []
    },
    "/notifications/mark_list/": {
      "post": {
        "operationId": "notifications_mark_list",
        "description": "Marks the notifications generated before a specific time as read or seen.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListMarkNotification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListMarkNotification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": []
    },
    "/notifications/{id}/": {
      "get": {
        "operationId": "notifications_read",
        "description": "Retrieves an identified notification for an event.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this notification.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/notifications/{id}/mark/": {
      "post": {
        "operationId": "notifications_mark",
        "description": "Marks an identified notification as read or seen.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkNotification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MarkNotification"
            }
          }
        },
        "tags": [
          "notifications"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this notification.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/offers/": {
      "get": {
        "operationId": "offers_list",
        "description": "Retrieves a list of offers from negotiation threads for loadboard postings.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Offer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "offers"
        ]
      },
      "parameters": []
    },
    "/offers/{id}/": {
      "get": {
        "operationId": "offers_read",
        "description": "Retrieves an identified offer from a negotiation thread for a loadboard posting.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          }
        },
        "tags": [
          "offers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this offer.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/": {
      "get": {
        "operationId": "postings_list",
        "description": "Retrieves a list of loadboard postings.",
        "parameters": [
          {
            "name": "late",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "update_time__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "active_revision__isnull",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__lt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id__gt",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "broker_load_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoice_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pickup_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivery_zip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "inoperable",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enclosed_trailer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "number_vehicles",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ship_within",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Load"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "post": {
        "operationId": "postings_create",
        "description": "Creates a new loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": []
    },
    "/postings/{id}/": {
      "get": {
        "operationId": "postings_read",
        "description": "Retrieves an identified loadboard posting.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "put": {
        "operationId": "postings_update",
        "description": "Updates an identified loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "patch": {
        "operationId": "postings_partial_update",
        "description": "Updates partially an identified loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "delete": {
        "operationId": "postings_delete",
        "description": "Deletes an identified loadboard posting and the associated load.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/broker_cancel/": {
      "post": {
        "operationId": "postings_broker_cancel",
        "description": "Cancels an identified loadboard posting and the associated load. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/can_instant_book/": {
      "post": {
        "operationId": "postings_can_instant_book",
        "description": "Checks if the Instant booking option is enabled for an identified loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/claim/": {
      "post": {
        "operationId": "postings_claim",
        "description": "Sends a booking request for an identified loadboard posting. Available only to carriers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Claim"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/dispatch_to_carrier/": {
      "post": {
        "operationId": "postings_dispatch_to_carrier",
        "description": "Dispatches an identified loadboard posting to a specific carrier. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dispatch"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Dispatch"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/events/": {
      "get": {
        "operationId": "postings_events",
        "description": "Retrieves the list of events from the activity log for an identified loadboard posting.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Load"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/offer/": {
      "post": {
        "operationId": "postings_offer",
        "description": "Sends a booking offer for an identified loadboard posting.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/postings/{id}/remove_from_loadboard/": {
      "post": {
        "operationId": "postings_remove_from_loadboard",
        "description": "Removes an identified loadboard posting from the loadboard. Available only to shippers.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "postings"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this load.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/revisions/": {
      "get": {
        "operationId": "revisions_list",
        "description": "Retrieves a list of load revisions.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Revision"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "revisions"
        ]
      },
      "parameters": []
    },
    "/revisions/{id}/": {
      "get": {
        "operationId": "revisions_read",
        "description": "Retrieves an identified load revision.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          }
        },
        "tags": [
          "revisions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this revision.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/revisions/{id}/accept/": {
      "post": {
        "operationId": "revisions_accept",
        "description": "Accepts an identified load revision.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "revisions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this revision.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/revisions/{id}/decline/": {
      "post": {
        "operationId": "revisions_decline",
        "description": "Declines an identified load revision.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "revisions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this revision.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/revisions/{id}/notify/": {
      "post": {
        "operationId": "revisions_notify",
        "description": "Sends a notification for an identified load revision to the carrier.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "revisions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this revision.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/roles/": {
      "get": {
        "operationId": "roles_list",
        "description": "Retrieves a list of the configured user roles.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": []
    },
    "/roles/{id}/": {
      "get": {
        "operationId": "roles_read",
        "description": "Retrieve an identified user role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "roles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this role.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/sign_ups/": {
      "post": {
        "operationId": "sign_ups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignUp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SignUp"
            }
          }
        },
        "tags": [
          "sign_ups"
        ]
      },
      "parameters": []
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "description": "Retrieves a list of users.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_create",
        "description": "Creates a new user account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/accept_loadboard_tc/": {
      "post": {
        "operationId": "users_accept_loadboard_tc",
        "description": "Accepts the loadboard terms of use for the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/accept_terms/": {
      "post": {
        "operationId": "users_accept_terms",
        "description": "Accepts the Ship.Cars terms of use for the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change_email/": {
      "post": {
        "operationId": "users_change_email",
        "description": "Changes the email address for the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change_password/": {
      "post": {
        "operationId": "users_change_password",
        "description": "Changes the password for the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/change_phone_number/": {
      "post": {
        "operationId": "users_change_phone_number",
        "description": "Changes the phone number for the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/create_driver/": {
      "post": {
        "operationId": "users_create_driver",
        "description": "Creates a new user account (for a driver user).",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDriver"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateDriver"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/create_user/": {
      "post": {
        "operationId": "users_create_user",
        "description": "Creates a new user account (for a non-driver user).",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/decode_hashidpk/": {
      "parameters": []
    },
    "/users/driver_activity/": {
      "get": {
        "operationId": "users_driver_activity",
        "description": "Retrieves the events for the activity of driver users. FIX_ME.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/jwt/": {
      "get": {
        "operationId": "users_jwt",
        "description": "Retrieves a JSON web token for the current user.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/last_event/": {
      "get": {
        "operationId": "users_last_event",
        "description": "Retrieves a timestamp of the occurrence of the latest event associated with the current user.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/login/": {
      "post": {
        "operationId": "users_login",
        "description": "Logs in the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/me/": {
      "get": {
        "operationId": "users_me",
        "description": "Retrieves the details of the current user's account.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/password_requirements/": {
      "parameters": []
    },
    "/users/password_requirements_html/": {
      "parameters": []
    },
    "/users/password_requirements_nested/": {
      "parameters": []
    },
    "/users/reset_password/": {
      "post": {
        "operationId": "users_reset_password",
        "description": "Resets the password for the current user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailPhone"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty body"
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/verify/": {
      "post": {
        "operationId": "users_verify",
        "description": "Resends the verification link for the current user. FIX_ME",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/{id}/": {
      "get": {
        "operationId": "users_read",
        "description": "Retrieves an identified user account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_update",
        "description": "Updates an identified user account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_partial_update",
        "description": "Updates partially an identified user account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_delete",
        "description": "Deletes an identified user account.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/activate_user/": {
      "post": {
        "operationId": "users_activate_user",
        "description": "Activates an identified user account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/activity/": {
      "get": {
        "operationId": "users_activity",
        "description": "Retrieves the events for the activity of an identified user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/change_user_email/": {
      "post": {
        "operationId": "users_change_user_email",
        "description": "Changes the email address of an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/change_user_phone_number/": {
      "post": {
        "operationId": "users_change_user_phone_number",
        "description": "Changes the phone number of an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Phone"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Phone"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/deactivate_user/": {
      "post": {
        "operationId": "users_deactivate_user",
        "description": "Deactivates an identified user account.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/resend_activation/": {
      "post": {
        "operationId": "users_resend_activation",
        "description": "Resends the verification link for an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResendVerification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResendVerification"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/resend_email_verification/": {
      "post": {
        "operationId": "users_resend_email_verification",
        "description": "Resends the verification link for an identified user via email.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/resend_sms_verification/": {
      "post": {
        "operationId": "users_resend_sms_verification",
        "description": "Resends the verification link for an identified user via SMS.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/reset_user_password/": {
      "post": {
        "operationId": "users_reset_user_password",
        "description": "Resets the password of an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/reset_user_signature/": {
      "post": {
        "operationId": "users_reset_user_signature",
        "description": "Resets the signature of an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/set_custom_permissions/": {
      "post": {
        "operationId": "users_set_custom_permissions",
        "description": "Sets the custom permissions assigned to an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetCustomPermission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetCustomPermission"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/set_role/": {
      "post": {
        "operationId": "users_set_role",
        "description": "Sets the user role of an identified user.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetRole"
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/set_what_is_new_timestamp/": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/users/{id}/what_is_new/": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this user.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicle_types/": {
      "get": {
        "operationId": "vehicle_types_list",
        "description": "Retrieves a list of vehicle types.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VehicleType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "vehicle_types"
        ]
      },
      "parameters": []
    },
    "/vehicle_types/{id}/": {
      "get": {
        "operationId": "vehicle_types_read",
        "description": "Retrieves an identified vehicle type.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VehicleType"
            }
          }
        },
        "tags": [
          "vehicle_types"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/": {
      "get": {
        "operationId": "vehicles_list",
        "description": "Retrieves a list of vehicles.",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                },
                "previous": {
                  "type": "string",
                  "format": "uri"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Vehicle"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "post": {
        "operationId": "vehicles_create",
        "description": "Creates a new vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": []
    },
    "/vehicles/download_gallery_attachments/": {
      "parameters": []
    },
    "/vehicles/gallery_attachments/": {
      "parameters": []
    },
    "/vehicles/{id}/": {
      "get": {
        "operationId": "vehicles_read",
        "description": "Retrieves an identified vehicle.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "put": {
        "operationId": "vehicles_update",
        "description": "Updates an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "patch": {
        "operationId": "vehicles_partial_update",
        "description": "Updates partially an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "delete": {
        "operationId": "vehicles_delete",
        "description": "Deletes an identified vehicle.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/deliver/": {
      "post": {
        "operationId": "vehicles_deliver",
        "description": "Marks an identified vehicle as delivered.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickupDelviery"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PickupDelviery"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/delivery_odometer_reading/": {
      "post": {
        "operationId": "vehicles_delivery_odometer_reading",
        "description": "Sets the odometer reading value at the time of delivery of an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Odometer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Odometer"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/download_attachments/": {
      "get": {
        "operationId": "vehicles_download_attachments",
        "description": "Downloads the attached files associated with an identified vehicle.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/invalidate_delivery/": {
      "post": {
        "operationId": "vehicles_invalidate_delivery",
        "description": "Invalidates the delivery of an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/invalidate_pickup/": {
      "post": {
        "operationId": "vehicles_invalidate_pickup",
        "description": "Invalidates the pickup of an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/pick_up/": {
      "post": {
        "operationId": "vehicles_pick_up",
        "description": "Marks an identified vehicle as picked up.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PickupDelviery"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PickupDelviery"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/pickup_odometer_reading/": {
      "post": {
        "operationId": "vehicles_pickup_odometer_reading",
        "description": "Sets the odometer reading value at the time of pickup of an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Odometer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Odometer"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/replace_m22_delivery_damages/": {
      "post": {
        "operationId": "vehicles_replace_m22_delivery_damages",
        "description": "Replaces the list of M-22 damages noted at the time of delivery for an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/replace_m22_pickup_damages/": {
      "post": {
        "operationId": "vehicles_replace_m22_pickup_damages",
        "description": "Replaces the list of M-22 damages noted at the time of pickup for an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/set_vin/": {
      "post": {
        "operationId": "vehicles_set_vin",
        "description": "Sets the VIN number of an identified vehicle.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vin"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/vehicles/{id}/specifications/": {
      "get": {
        "operationId": "vehicles_specifications",
        "description": "Retrieves the specification data for an identified vehicle.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          }
        },
        "tags": [
          "vehicles"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this vehicle.",
          "required": true,
          "type": "integer"
        }
      ]
    }
  },
  "definitions": {
    "ArchivedPosting": {
      "type": "object",
      "properties": {}
    },
    "DamageEntry": {
      "description": "A list of damage entries that are noted on the attached file.",
      "required": [
        "type",
        "location"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "description": "The abbreviation of the the damage entry type. Valid values are `B` (bent), `BB` (buffer), `BR` (broken), `C` (cut), `CR` (cracked), `D` (dented), `F` (faded) , `FF` (foreign), `G` (gouged), `L` (loose), `M` (missing), `P` (pitted), `PC` (paint), `R` (rubbed), `RU` (rusted), `S` (scratched), `SL` (soiled), `ST` (stained), `T` (torn).",
          "type": "string"
        },
        "segment": {
          "title": "Segment",
          "description": "The vehicle segment on which the damage entry is noted. Valid values are `front`, `back`, `left`, `right`, and `top`.",
          "type": "string"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "The date and time when the damage entry was noted.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "location": {
          "title": "Location",
          "description": "A GeoJSON object with the coordinates of the damage entry on the attached image file.",
          "type": "string"
        },
        "attachment": {
          "title": "Attachment",
          "description": "The identifier of the attached image file on which the damage entry is noted.",
          "type": "string",
          "format": "uri"
        },
        "attachment_id": {
          "title": "Attachment id",
          "description": "The identifier of the attached image file on which the damage entry is noted.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Attachment": {
      "required": [
        "file",
        "type"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "file": {
          "title": "File",
          "description": "The URL for accessing the attached file.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "image": {
          "title": "Image",
          "description": "An object with the URLs of the full size and thumbnail image versions of the attached file.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "damages": {
          "title": "Damages",
          "description": "A list of damage entries that are noted on the attached file.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DamageEntry"
          },
          "readOnly": true
        },
        "load": {
          "title": "Load",
          "description": "The identifier of the load to which the file is attached.",
          "type": "string",
          "format": "uri"
        },
        "creator": {
          "title": "Creator",
          "description": "The identifier of the user who created the attachment.",
          "type": "string",
          "format": "uri",
          "default": "https://qa.ship.cars/api/users/e4mz/"
        },
        "segment": {
          "title": "Segment",
          "description": "FIX_ME The vehicle segment to which the attached file applies.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "The type of the attached file.",
          "type": "string",
          "enum": [
            "pickup_signature",
            "delivery_signature",
            "pickup_sketch",
            "delivery_sketch",
            "pickup_damages_picture",
            "delivery_damages_picture",
            "pickup_odometer_picture",
            "delivery_odometer_picture",
            "pickup_bol",
            "delivery_bol",
            "invoice",
            "dispatch_sheet",
            "scanned_document",
            "other"
          ]
        },
        "original_file": {
          "title": "Original file",
          "description": "The URL for accessing the original file that was replaced by this file.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "height": {
          "title": "Image Height",
          "description": "The height of the attached image file (in pixels).",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "width": {
          "title": "Image Width",
          "description": "The width of the attached image file (in pixels).",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "active": {
          "title": "Active",
          "description": "Indicates whether the URL for accessing the attached file is active.",
          "type": "boolean",
          "readOnly": true,
          "default": true
        },
        "share_with_driver": {
          "title": "Share with driver",
          "description": "Indicates whether driver users can access the attached file.",
          "type": "boolean",
          "default": true
        },
        "location": {
          "title": "Location",
          "description": "A GeoJSON object with the GSP coordinates of the location associated with the attched file.",
          "type": "string"
        },
        "location_address": {
          "title": "Location address",
          "description": "The full address of the location associated with the attached file as retrieved by the GPS coordinates.",
          "type": "string",
          "maxLength": 256
        },
        "comments": {
          "title": "Comments",
          "description": "Additional comments about the attached file.",
          "type": "string"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the attached file was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "The date and time when something happened FIX_ME.",
          "type": "string",
          "format": "date-time"
        },
        "order": {
          "title": "Order",
          "description": "The identifier of the load to which the file is attached.",
          "type": "string",
          "format": "uri"
        },
        "vehicle": {
          "title": "Vehicle",
          "description": "The identifier of the vehicle to which the file is attached.",
          "type": "string",
          "format": "uri"
        },
        "creator_id": {
          "title": "Creator id",
          "description": "The identifier of the user who created the attachment.",
          "type": "string",
          "readOnly": true
        },
        "order_id": {
          "title": "Order id",
          "description": "The identifier of the load to which the file is attached.",
          "type": "string",
          "readOnly": true
        },
        "vehicle_id": {
          "title": "Vehicle id",
          "description": "The identifier of the vehicle to which the file is attached.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "M22Damage": {
      "description": "A list of damages noted for the vehicle according to the M-22 standard.",
      "required": [
        "area",
        "type",
        "severity"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "area": {
          "title": "Area",
          "description": "The unique code of the M-22 damage area.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "The unique code of the M-22 damage type.",
          "type": "string"
        },
        "severity": {
          "title": "Severity",
          "description": "The unique code of the M-22 damage severity.",
          "type": "string"
        },
        "inspection_type": {
          "title": "Inspection type",
          "description": "Indicates the inspection during which the M-22 damage is noted.",
          "type": "string",
          "enum": [
            "pickup",
            "delivery"
          ]
        },
        "vehicle": {
          "title": "Vehicle",
          "description": "The identifier of the vehicle for which the M-22 damage is noted.",
          "type": "string",
          "format": "uri"
        },
        "vehicle_id": {
          "title": "Vehicle id",
          "description": "The identifier of the vehicle for which the M-22 damage is noted.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NestedVehicle": {
      "description": "A list of the vehicles in the load.",
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "description": "The URL of the vehicle resource.",
          "type": "string",
          "format": "uri"
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "vehicle_sketch": {
          "title": "Vehicle sketch",
          "description": "The URL of the sketch for the vehicle type (used for noting damages).",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "attachments": {
          "title": "Attachments",
          "description": "A list of attached files associated with the vehicle.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "description": "The internal name of the vehicle type.",
          "type": "string"
        },
        "human_type": {
          "title": "Human type",
          "description": "The human-readable name of the vehicle type.",
          "type": "string",
          "readOnly": true
        },
        "logo": {
          "title": "Logo",
          "description": "The URL of the logo of the vehicle manufacturer.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "m22_damages": {
          "title": "M22 damages",
          "description": "A list of damages noted for the vehicle according to the M-22 standard.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/M22Damage"
          },
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "description": "Indicates whether the vehicle is being added to the load.",
          "type": "boolean"
        },
        "deleting": {
          "title": "Deleting",
          "description": "Indicates whether the vehicle is being removed from the load.",
          "type": "boolean"
        },
        "year": {
          "title": "Year",
          "description": "The manufacture year of the vehicle (as specified by the shipper).",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "make": {
          "title": "Make",
          "description": "The make of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "model": {
          "title": "Model",
          "description": "The model of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "color": {
          "title": "Color",
          "description": "The color of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "vin": {
          "title": "Vin",
          "description": "The VIN number of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 20
        },
        "buyer_number": {
          "title": "Buyer number",
          "description": "The buyer number of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "lot_number": {
          "title": "Lot number",
          "description": "The LOT number of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "operable": {
          "title": "Operable",
          "description": "Indicates whether the vehicle is in an operable condition.",
          "type": "boolean"
        },
        "broker_vehicle_id": {
          "title": "Broker vehicle id",
          "description": "The unique identifier of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 256
        },
        "specifications_data": {
          "title": "Specifications data",
          "description": "The full specification data for the vehicle (including weight, length, height, and width) as retrieved from the vehicle specification database.",
          "type": "string"
        },
        "specifications_year": {
          "title": "Specifications year",
          "description": "The manufacture year of the vehicle used to retrieve data from the vehicle specification database.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "status": {
          "title": "Status",
          "description": "The current status of the vehicle.",
          "type": "string",
          "enum": [
            "new",
            "assigned",
            "picked-up",
            "delivered"
          ],
          "default": "new"
        },
        "pickup_odometer": {
          "title": "Pickup odometer",
          "description": "The odometer reading of the vehicle as recorded by the driver at the time of pickup.",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "delivery_odometer": {
          "title": "Delivery odometer",
          "description": "The odometer reading of the vehicle as recorded by the driver at the time of delivery.",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "pickup_location": {
          "title": "Pickup location",
          "description": "A GeoJSON object with the GSP coordinates of the actual pickup location.",
          "type": "string"
        },
        "pickup_location_address": {
          "title": "Pickup location address",
          "description": "The full address of the actual pickup location as retrieved from the GPS coordinates.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_location": {
          "title": "Delivery location",
          "description": "A GeoJSON object with the GSP coordinates of the actual delivery location.",
          "type": "string"
        },
        "delivery_location_address": {
          "title": "Delivery location address",
          "description": "The full address of the actual delivery location as retrieved from the GPS coordinates.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_night": {
          "title": "Pickup night",
          "description": "Indicates whether it was dark at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_snow": {
          "title": "Pickup snow",
          "description": "Indicates whether it was snowing at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_rain": {
          "title": "Pickup rain",
          "description": "Indicates whether it was raining at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_dirty": {
          "title": "Pickup dirty",
          "description": "Indicates whether the vehicle was dirty at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_full_name": {
          "title": "Pickup full name",
          "description": "The full name of the pickup contact who signed the BOL.",
          "type": "string",
          "maxLength": 64
        },
        "delivery_full_name": {
          "title": "Delivery full name",
          "description": "The full name of the delivery contact who signed the BOL.",
          "type": "string",
          "maxLength": 64
        },
        "delivery_exceptions": {
          "title": "Delivery exceptions",
          "description": "The delivery contact's additional notes about the exceptions added at the time of delivery.",
          "type": "string",
          "maxLength": 1024
        },
        "delivery_driver_notes": {
          "title": "Delivery driver notes",
          "description": "The driver's additional notes about the vehicle at the time of delivery.",
          "type": "string",
          "maxLength": 1024
        },
        "pickup_driver_notes": {
          "title": "Pickup driver notes",
          "description": "The driver's additional notes about the vehicle at the time of pickup.",
          "type": "string",
          "maxLength": 1024
        },
        "pickup_date": {
          "title": "Pickup date",
          "description": "The actual date when the vehicle was picked up.",
          "type": "string",
          "format": "date-time"
        },
        "pickup_no_damages": {
          "title": "Pickup no damages",
          "description": "Indicates whether the vehicle was picked up without noting any damages to it.",
          "type": "boolean"
        },
        "delivery_date": {
          "title": "Delivery date",
          "description": "The actual date when the vehicle was delivered.",
          "type": "string",
          "format": "date-time"
        },
        "delivery_no_damages": {
          "title": "Delivery no damages",
          "description": "Indicates whether the vehicle was delivered without noting any damages to it.",
          "type": "boolean"
        },
        "seen_by_driver_time": {
          "title": "Seen by driver time",
          "description": "The date and time when the driver saw the assigned load and the vehicle.",
          "type": "string",
          "format": "date-time"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the vehicle was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the vehicle was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "active_change": {
          "title": "Active change",
          "description": "The identifier of the latest change from an active revision related to the vehicle.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "active_revision": {
          "title": "Active revision",
          "description": "The identifier of the active revision related to the vehicle.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "load": {
          "title": "Load",
          "description": "The identifier of the load of which the vehicle is part.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "pickup_signature_decline_reason": {
          "title": "Pickup signature decline reason",
          "description": "The identifier of the reason given by the pickup contact for declining to sign the BOL.",
          "type": "string",
          "format": "uri"
        },
        "delivery_signature_decline_reason": {
          "title": "Delivery signature decline reason",
          "description": "The identifier of the reason given by the delivery contact for declining to sign the BOL.",
          "type": "string",
          "format": "uri"
        },
        "driver": {
          "title": "Driver",
          "description": "The identifier of the driver to whom the vehicle is assigned as part of the load.",
          "type": "string",
          "format": "uri"
        },
        "active_change_id": {
          "title": "Active change id",
          "description": "The identifier of the latest change from an active revision related to the vehicle.",
          "type": "string",
          "readOnly": true
        },
        "active_revision_id": {
          "title": "Active revision id",
          "description": "The identifier of the active revision related to the vehicle.",
          "type": "string",
          "readOnly": true
        },
        "load_id": {
          "title": "Load id",
          "description": "The identifier of the load of which the vehicle is part.",
          "type": "string",
          "readOnly": true
        },
        "pickup_signature_decline_reason_id": {
          "title": "Pickup signature decline reason id",
          "description": "The identifier of the reason given by the pickup contact for declining to sign the BOL.",
          "type": "string",
          "readOnly": true
        },
        "delivery_signature_decline_reason_id": {
          "title": "Delivery signature decline reason id",
          "description": "The identifier of the reason given by the delivery contact for declining to sign the BOL.",
          "type": "string",
          "readOnly": true
        },
        "driver_id": {
          "title": "Driver id",
          "description": "The identifier of the driver to whom the vehicle is assigned as part of the load.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ActivityLog": {
      "description": "A list of the events recorded for the load.",
      "required": [
        "extra_object",
        "order"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "event_type": {
          "title": "Event type",
          "description": "The type of the event. Valid values are `dispatched`, `accepted`, `assigned`, `seen`, `picked_up`, `delivered`, `uship_code_added`, `invoice_generated`, `shipper_change`, `change_accepted`, `change_declined`, `cancelled`, and `load_manually_created`.",
          "type": "string",
          "readOnly": true
        },
        "event_type_category": {
          "title": "Event type category",
          "description": "The category of the event type. Valid values are `general`, `shipper`, and `driver`.",
          "type": "string",
          "readOnly": true
        },
        "extra_object": {
          "title": "Extra object",
          "description": "Details about the unique identifier and the resource type of the extra object affected by the event.",
          "type": "string"
        },
        "actor_company": {
          "title": "Actor company",
          "description": "The identifier of the company with which the actor user is associated.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "carrier": {
          "title": "Carrier",
          "description": "The identifier of the carrier company to which the load is dispatched.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "broker": {
          "title": "Broker",
          "description": "The identifier of the shipper company that created the load.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "The date and time when the notification was generated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "order": {
          "title": "Order",
          "description": "The identifier of the load to which the event that triggered the notification is related.",
          "type": "string",
          "format": "uri"
        },
        "actor": {
          "title": "Actor",
          "description": "The identifier of the user whose actions lead to the event that triggered the notification.",
          "type": "string",
          "format": "uri"
        },
        "actor_company_id": {
          "title": "Actor company id",
          "description": "The identifier of the company with which the actor user is associated.",
          "type": "string",
          "readOnly": true
        },
        "carrier_id": {
          "title": "Carrier id",
          "description": "The identifier of the carrier company to which the load is dispatched.",
          "type": "string",
          "readOnly": true
        },
        "broker_id": {
          "title": "Broker id",
          "description": "The identifier of the shipper company that created the load.",
          "type": "string",
          "readOnly": true
        },
        "order_id": {
          "title": "Order id",
          "description": "The identifier of the load to which the event that triggered the notification is related.",
          "type": "string",
          "readOnly": true
        },
        "actor_id": {
          "title": "Actor id",
          "description": "The identifier of the user whose actions lead to the event that triggered the notification.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Posting": {
      "title": "Posting",
      "description": "An object with the posting details. Available when the load is posted on the loadboard.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the posting was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the posting was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "description": "The current status of the posting, `active` or `inactive`.",
          "type": "string",
          "maxLength": 64
        },
        "order": {
          "title": "Order",
          "description": "The identifier of the load that is posted on the loadboard.",
          "type": "string",
          "format": "uri"
        },
        "order_id": {
          "title": "Order id",
          "description": "The identifier of the load that is posted on the loadboard.",
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "Load": {
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "vehicles": {
          "title": "Vehicles",
          "description": "A list of the vehicles in the load.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedVehicle"
          }
        },
        "decline_reason": {
          "title": "Decline reason",
          "description": "The unique slug of the reason given by the carrier for declining the dispatched load.",
          "type": "string",
          "readOnly": true
        },
        "cancel_reason": {
          "title": "Cancel reason",
          "description": "The unique slug of the reason given by the carrier for cancelling the accepted load.",
          "type": "string",
          "readOnly": true
        },
        "active_change_values": {
          "title": "Active change values",
          "description": "The modified load attributes from the active load revision with their new values.",
          "type": "string",
          "readOnly": true
        },
        "activity_log": {
          "title": "Activity log",
          "description": "A list of the events recorded for the load.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityLog"
          },
          "readOnly": true
        },
        "attachments": {
          "title": "Attachments",
          "description": "A list of attached files associated with the load.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true
        },
        "distance_imperial": {
          "title": "Distance imperial",
          "description": "The calculated distance of the recommended route between the pickup and delivery locations (in miles).",
          "type": "integer",
          "readOnly": true
        },
        "carrier_dot": {
          "title": "Carrier dot",
          "description": "The URL of the carrier company resource from the `/api/carriers/{dot_number}/` endpoint.",
          "type": "string",
          "format": "uri"
        },
        "broker": {
          "title": "Broker",
          "description": "The identifier of the shipper company that created the load.",
          "type": "string",
          "format": "uri",
          "default": "https://qa.ship.cars/api/companies/ok2o/"
        },
        "payment_to_carrier": {
          "title": "Payment to carrier",
          "description": "The amount for which the invoice is generated. It is calculated as the difference between the total payment amount and the payment amounts on pickup and delivery: `payment_to_carrier = total_payment_to_carrier - payment_on_pickup - payment_on_delivery`.",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "posting": {
          "$ref": "#/definitions/Posting"
        },
        "carrier_dot_number": {
          "title": "Carrier dot number",
          "description": "The USDOT number of the carrier company.",
          "type": "string",
          "readOnly": true
        },
        "broker_dot_number": {
          "title": "Broker dot number",
          "description": "The USDOT number of the shipper company.",
          "type": "string",
          "readOnly": true
        },
        "terms_and_conditions": {
          "title": "Terms and conditions",
          "description": "The shipper company's terms of service that are used for the load.",
          "type": "string"
        },
        "parsed_data_id": {
          "title": "Parsed data id",
          "description": "The identifier of the parsed load data from the imported dispatch sheet.",
          "type": "string"
        },
        "invoice_number": {
          "title": "Invoice number",
          "description": "The reference number of the invoice generated for the load.",
          "type": "string",
          "readOnly": true
        },
        "pickup_requested_times": {
          "title": "Pickup requested times",
          "description": "The requested time range for the pickup.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_name": {
          "title": "Company name",
          "description": "The name of the pickup contact company.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_contact": {
          "title": "Full name",
          "description": "The name of the pickup contact person.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_address": {
          "title": "Pickup address",
          "description": "The street name and number from the pickup location address.",
          "type": "string",
          "maxLength": 1024
        },
        "pickup_address_location": {
          "title": "Pickup address location",
          "description": "A GeoJSON object with the GSP coordinates of the pickup location address.",
          "type": "string"
        },
        "pickup_city": {
          "title": "Pickup city",
          "description": "The city name from the pickup location address.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_state": {
          "title": "Pickup state",
          "description": "The two-letter abbreviation of the state from the pickup location address.",
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AS",
            "AZ",
            "AR",
            "AA",
            "AE",
            "AP",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FL",
            "GA",
            "GU",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "MP",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VI",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "pickup_zip": {
          "title": "Pickup zip",
          "description": "The zip code from the pickup location address.",
          "type": "string",
          "maxLength": 10
        },
        "pickup_phone_1": {
          "title": "Phone",
          "description": "The pickup contact's first contact number.",
          "type": "string",
          "maxLength": 20
        },
        "pickup_phone_1_notes": {
          "title": "Pickup phone 1 notes",
          "description": "Additional notes about the pickup contact’s first contact number.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_phone_1_type": {
          "title": "Type",
          "description": "The type of the pickup contact’s first contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "pickup_phone_2": {
          "title": "Phone",
          "description": "The pickup contact's second contact number.",
          "type": "string",
          "maxLength": 20
        },
        "pickup_phone_2_notes": {
          "title": "Pickup phone 2 notes",
          "description": "Additional notes about the pickup contact’s second contact number.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_phone_2_type": {
          "title": "Type",
          "description": "The type of the pickup contact’s second contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "pickup_phone_3": {
          "title": "Phone",
          "description": "The pickup contact's third contact number.",
          "type": "string",
          "maxLength": 20
        },
        "pickup_phone_3_notes": {
          "title": "Pickup phone 3 notes",
          "description": "Additional notes about the pickup contact’s third contact number.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_phone_3_type": {
          "title": "Type",
          "description": "The type of the pickup contact’s third contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "pickup_date": {
          "title": "Pickup date",
          "description": "The date when the load was actually picked up from the origin location.",
          "type": "string",
          "format": "date-time"
        },
        "pickup_no_damages": {
          "title": "Pickup no damages",
          "description": "Indicates whether the load was picked up without noting any damages to the vehicles.",
          "type": "boolean"
        },
        "pickup_notes": {
          "title": "Pickup notes",
          "description": "The driver's additional notes at the time of pickup.",
          "type": "string"
        },
        "pickup_customer_not_present": {
          "title": "Pickup customer not present",
          "description": "Indicates whether the pickup contact was not present at the time of pickup.",
          "type": "boolean"
        },
        "pickup_estimate_type": {
          "title": "Pickup restrictions",
          "description": "The type of the estimated pickup date specified by the carrier in a booking offer.",
          "type": "string",
          "enum": [
            "estimated",
            "exactly",
            "not_earlier",
            "not_later"
          ]
        },
        "pickup_estimate_date": {
          "title": "Pickup schedule date",
          "description": "The estimated pickup date specified by the carrier in a booking offer.",
          "type": "string",
          "format": "date"
        },
        "pickup_estimate_end_type": {
          "title": "Pickup estimate end type",
          "description": "The type of the last date of the estimated pickup window specified by the carrier in a booking offer.",
          "type": "string",
          "enum": [
            "estimated",
            "not_later"
          ]
        },
        "pickup_estimate_end_date": {
          "title": "Pickup estimate end date",
          "description": "The last date of the estimated pickup window specified by the carrier in a booking offer.",
          "type": "string",
          "format": "date"
        },
        "pickup_requested_date_start": {
          "title": "Pickup requested date start",
          "description": "The first date of the requested pickup window for a load posted on the loadboard.",
          "type": "string",
          "format": "date"
        },
        "pickup_requested_date_start_type": {
          "title": "Delivery restrictions",
          "description": "The type of the first date of the requested pickup window for a load posted on the loadboard.",
          "type": "string",
          "enum": [
            "estimated",
            "exactly",
            "not_earlier",
            "not_later"
          ]
        },
        "pickup_requested_date_end": {
          "title": "Pickup requested date end",
          "description": "The last date of the requested pickup window for a load posted on the loadboard.",
          "type": "string",
          "format": "date"
        },
        "pickup_requested_date_end_type": {
          "title": "Pickup requested date end type",
          "description": "The type of the last date of the requested pickup window for a load posted on the loadboard.",
          "type": "string",
          "enum": [
            "estimated",
            "not_later"
          ]
        },
        "pickup_contract_date_start": {
          "title": "Pickup contract date start",
          "description": "The first date of the contract pickup window.",
          "type": "string",
          "format": "date"
        },
        "pickup_contract_date_start_type": {
          "title": "Delivery restrictions",
          "description": "The type of the first date of the contract pickup window.",
          "type": "string",
          "enum": [
            "estimated",
            "exactly",
            "not_earlier",
            "not_later"
          ]
        },
        "pickup_contract_date_end": {
          "title": "Pickup contract date end",
          "description": "The last date of the contract pickup window.",
          "type": "string",
          "format": "date"
        },
        "pickup_contract_date_end_type": {
          "title": "Pickup contract date end type",
          "description": "The type of the last date of the contract pickup window.",
          "type": "string",
          "enum": [
            "estimated",
            "not_later"
          ]
        },
        "delivery_requested_times": {
          "title": "Delivery requested times",
          "description": "The requested time range for the delivery.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_name": {
          "title": "Company name",
          "description": "The name of the delivery contact company.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_contact": {
          "title": "Full name",
          "description": "The name of the delivery contact person.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_address": {
          "title": "Delivery address",
          "description": "The street name and number from the delivery location address.",
          "type": "string",
          "maxLength": 1024
        },
        "delivery_address_location": {
          "title": "Delivery address location",
          "description": "A GeoJSON object with the GSP coordinates of the delivery location address.",
          "type": "string"
        },
        "delivery_city": {
          "title": "Delivery city",
          "description": "The city name from the delivery location address.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_state": {
          "title": "Delivery state",
          "description": "The two-letter abbreviation of the state from the delivery location address.",
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AS",
            "AZ",
            "AR",
            "AA",
            "AE",
            "AP",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FL",
            "GA",
            "GU",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "MP",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VI",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "delivery_zip": {
          "title": "Delivery zip",
          "description": "The zip code from the delivery location address.",
          "type": "string",
          "maxLength": 10
        },
        "delivery_phone_1": {
          "title": "Phone",
          "description": "The delivery contact's first contact number.",
          "type": "string",
          "maxLength": 20
        },
        "delivery_phone_1_notes": {
          "title": "Delivery phone 1 notes",
          "description": "Additional notes about the delivery contact’s first contact number.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_phone_1_type": {
          "title": "Type",
          "description": "The type of the delivery contact’s first contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "delivery_phone_2": {
          "title": "Phone",
          "description": "The delivery contact's second contact number.",
          "type": "string",
          "maxLength": 20
        },
        "delivery_phone_2_notes": {
          "title": "Delivery phone 2 notes",
          "description": "Additional notes about the delivery contact’s second contact number.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_phone_2_type": {
          "title": "Type",
          "description": "The type of the delivery contact’s second contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "delivery_phone_3": {
          "title": "Phone",
          "description": "The delivery contact's third contact number.",
          "type": "string",
          "maxLength": 20
        },
        "delivery_phone_3_notes": {
          "title": "Delivery phone 3 notes",
          "description": "Additional notes about the delivery contact’s third contact number.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_phone_3_type": {
          "title": "Type",
          "description": "The type of the delivery contact’s third contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "delivery_date": {
          "title": "Delivery date",
          "description": "The date when the load was actually delivered to the destination location.",
          "type": "string",
          "format": "date-time"
        },
        "delivery_notes": {
          "title": "Delivery notes",
          "description": "The driver's additional notes at the time of delivery.",
          "type": "string"
        },
        "delivery_customer_not_present": {
          "title": "Delivery customer not present",
          "description": "Indicates whether the delivery contact was not present at the time of delivery.",
          "type": "boolean"
        },
        "delivery_no_damages": {
          "title": "Delivery no damages",
          "description": "Indicates whether the load was delivered without noting any damages to the vehicles.",
          "type": "boolean"
        },
        "delivery_estimate_type": {
          "title": "Delivery restrictions",
          "description": "The type of the estimated delivery date specified by the carrier in a booking offer.",
          "type": "string",
          "enum": [
            "estimated",
            "exactly",
            "not_earlier",
            "not_later"
          ]
        },
        "delivery_estimate_date": {
          "title": "Delivery schedule date",
          "description": "The estimated delivery date specified by the carrier in a booking offer.",
          "type": "string",
          "format": "date"
        },
        "delivery_estimate_end_type": {
          "title": "Delivery estimate end type",
          "description": "The type of the last date of the estimated delivery window specified by the carrier in a booking offer.",
          "type": "string",
          "enum": [
            "estimated",
            "not_later"
          ]
        },
        "delivery_estimate_end_date": {
          "title": "Delivery estimate end date",
          "description": "The last date of the estimated delivery window specified by the carrier in a booking offer.",
          "type": "string",
          "format": "date"
        },
        "delivery_requested_date_start": {
          "title": "Delivery requested date start",
          "description": "The first date of the requested delivery window for a load posted on the loadboard.",
          "type": "string",
          "format": "date"
        },
        "delivery_requested_date_start_type": {
          "title": "Delivery restrictions",
          "description": "The type of the first date of the requested delivery window for a load posted on the loadboard.",
          "type": "string",
          "enum": [
            "estimated",
            "exactly",
            "not_earlier",
            "not_later"
          ]
        },
        "delivery_requested_date_end": {
          "title": "Delivery requested date end",
          "description": "The last date of the requested delivery window for a load posted on the loadboard.",
          "type": "string",
          "format": "date"
        },
        "delivery_requested_date_end_type": {
          "title": "Delivery requested date end type",
          "description": "The type of the last date of the requested delivery window for a load posted on the loadboard.",
          "type": "string",
          "enum": [
            "estimated",
            "not_later"
          ]
        },
        "delivery_contract_date_start": {
          "title": "Delivery contract date start",
          "description": "The first date of the contract delivery window.",
          "type": "string",
          "format": "date"
        },
        "delivery_contract_date_start_type": {
          "title": "Delivery restrictions",
          "description": "The type of the first date of the contract delivery window.",
          "type": "string",
          "enum": [
            "estimated",
            "exactly",
            "not_earlier",
            "not_later"
          ]
        },
        "delivery_contract_date_end": {
          "title": "Delivery contract date end",
          "description": "The last date of the contract delivery window.",
          "type": "string",
          "format": "date"
        },
        "delivery_contract_date_end_type": {
          "title": "Delivery contract date end type",
          "description": "The type of the first date of the contract delivery window.",
          "type": "string",
          "enum": [
            "estimated",
            "not_later"
          ]
        },
        "transit_time_estimated_min": {
          "title": "Transit time estimated min",
          "description": "The minimum number of transit days from the booking offer calculated as the difference between the last date of the estimated pickup window and the first date of the estimated delivery window.",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "transit_time_estimated_max": {
          "title": "Transit time estimated max",
          "description": "The maximum number of transit days from the booking offer calculated as the difference between the first date of the estimated pickup window and the last date of the estimated delivery window.",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "accept_time": {
          "title": "Accept time",
          "description": "The date and time when the load was accepted by a representative of the carrier company.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "assign_time": {
          "title": "Assign time",
          "description": "The date and time when the load was assigned to a driver.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "last_change_time": {
          "title": "Last change time",
          "description": "The date and time when the latest change to the load was made.",
          "type": "string",
          "format": "date-time"
        },
        "distance": {
          "title": "Distance",
          "description": "The calculated distance of the recommended route between the pickup and delivery locations (in meters).",
          "type": "integer",
          "readOnly": true
        },
        "last_dispatch_generate_time": {
          "title": "Last dispatch generate time",
          "description": "The date and time when a user associated with the carrier company accepted the dispatched load or the changes from a load revision.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "last_dispatch_generate_user_email": {
          "title": "Last dispatch generate user email",
          "description": "The registered email address of the user who accepted the dispatched load or the changes from a load revision.",
          "type": "string",
          "format": "email",
          "readOnly": true
        },
        "last_dispatch_generate_ip": {
          "title": "Last dispatch generate ip",
          "description": "The IP address from which the user accepted the dispatched load or the changes from a load revision.",
          "type": "string",
          "readOnly": true
        },
        "listed_price": {
          "title": "Listed price",
          "description": "The original price listed in the posting on the loadboard (before booking negotiations).",
          "type": "string",
          "format": "decimal"
        },
        "payment_on_pickup": {
          "title": "Payment on pickup",
          "description": "The payment amount due to the carrier on pickup.",
          "type": "string",
          "format": "decimal"
        },
        "payment_on_pickup_method": {
          "title": "Payment on pickup method",
          "description": "The payment method for the amount due to the carrier on pickup.",
          "type": "string",
          "enum": [
            "cash",
            "business_check",
            "cashiers_check"
          ]
        },
        "payment_on_delivery": {
          "title": "Payment on delivery",
          "description": "The payment amount due to the carrier on delivery.",
          "type": "string",
          "format": "decimal"
        },
        "payment_on_delivery_method": {
          "title": "Payment on delivery method",
          "description": "The payment method for the amount due to the carrier on delivery.",
          "type": "string",
          "enum": [
            "cash",
            "business_check",
            "cashiers_check",
            "uship"
          ]
        },
        "total_payment_to_carrier": {
          "title": "Carrier pay",
          "description": "The total payment amount due to the carrier for this load.",
          "type": "string",
          "format": "decimal"
        },
        "payment_term_business_days": {
          "title": "Payment term business days",
          "description": "The duration of the payment term period (in business days).",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "payment_term_begins": {
          "title": "Payment term begins",
          "description": "The event in the load processing flow that marks the beginning of the payment term period.",
          "type": "string",
          "enum": [
            "pickup",
            "delivery",
            "uship",
            "bol"
          ]
        },
        "payment_method": {
          "title": "Payment method",
          "description": "The billing payment method for the load.",
          "type": "string",
          "enum": [
            "ach",
            "company_check",
            "wire_transfer",
            "comchek"
          ]
        },
        "payment_notes": {
          "title": "Payment notes",
          "description": "Additional notes about the payment.",
          "type": "string"
        },
        "customer_name": {
          "title": "Company name",
          "description": "The name of the shipper company that created the load.",
          "type": "string",
          "maxLength": 256
        },
        "customer_contact": {
          "title": "Full name",
          "description": "The full name of the primary contact for the load at the shipper company.",
          "type": "string",
          "maxLength": 256
        },
        "customer_address": {
          "title": "Customer address",
          "description": "The street name and number from the shipper company’s registered address.",
          "type": "string",
          "maxLength": 1024
        },
        "customer_city": {
          "title": "Customer city",
          "description": "The city name from the shipper company’s registered address.",
          "type": "string",
          "maxLength": 256
        },
        "customer_state": {
          "title": "Customer state",
          "description": "The two-letter abbreviation of the state from the shipper company’s registered address.",
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AS",
            "AZ",
            "AR",
            "AA",
            "AE",
            "AP",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FL",
            "GA",
            "GU",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "MP",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VI",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "customer_zip": {
          "title": "Customer zip",
          "description": "The zip code from the shipper company’s registered address.",
          "type": "string",
          "maxLength": 10
        },
        "customer_email": {
          "title": "Customer email",
          "description": "The registered email address of the shipper company.",
          "type": "string",
          "format": "email",
          "maxLength": 64
        },
        "customer_phone_1": {
          "title": "Phone",
          "description": "The shipper company's first contact number.",
          "type": "string",
          "maxLength": 20
        },
        "customer_phone_1_notes": {
          "title": "Customer phone 1 notes",
          "description": "Additional notes about the shipper company’s first contact number.",
          "type": "string",
          "maxLength": 256
        },
        "customer_phone_1_type": {
          "title": "Type",
          "description": "The type of the shipper company's first contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "customer_phone_2": {
          "title": "Phone",
          "description": "The shipper company's second contact number.",
          "type": "string",
          "maxLength": 20
        },
        "customer_phone_2_notes": {
          "title": "Customer phone 2 notes",
          "description": "Additional notes about the shipper company’s second contact number.",
          "type": "string",
          "maxLength": 256
        },
        "customer_phone_2_type": {
          "title": "Type",
          "description": "The type of the shipper company's second contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "customer_phone_3": {
          "title": "Phone",
          "description": "The shipper company's third contact number.",
          "type": "string",
          "maxLength": 20
        },
        "customer_phone_3_notes": {
          "title": "Customer phone 3 notes",
          "description": "Additional notes about the shipper company’s third contact number.",
          "type": "string",
          "maxLength": 256
        },
        "customer_phone_3_type": {
          "title": "Type",
          "description": "The type of the shipper company's third contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "accepted": {
          "title": "Accepted",
          "description": "Indicates whether the load was accepted by the carrier.",
          "type": "boolean"
        },
        "labels": {
          "title": "Labels",
          "description": "A list of labels applied to the load by the shipper company.",
          "type": "array",
          "items": {
            "title": "Labels",
            "type": "string",
            "maxLength": 64
          }
        },
        "can_be_claimed": {
          "title": "Can be claimed",
          "description": "Indicates whether the Instant booking option is enabled for the load.",
          "type": "boolean"
        },
        "uship_code": {
          "title": "Uship code",
          "description": "The uShip code used for the load.",
          "type": "string",
          "maxLength": 32
        },
        "demo": {
          "title": "Demo",
          "description": "Indicates whether this is a demo load.",
          "type": "boolean",
          "readOnly": true
        },
        "broker_load_id": {
          "title": "Broker Load ID",
          "description": "The shipper company's unique identifier of the load.",
          "type": "string",
          "maxLength": 256
        },
        "instructions": {
          "title": "Dispatch instructions",
          "description": "The shipper's dispatch instructions for the load that are visible to carriers on the loadboard or before they accept the dispatched load.",
          "type": "string",
          "maxLength": 16000
        },
        "specific_load_requirements": {
          "title": "Specific load requirements",
          "description": "FIX_ME The shipper's instructions and requirements for the load that are visible to carriers only after they accept the dispatched load.",
          "type": "string",
          "maxLength": 4096
        },
        "driver_instructions": {
          "title": "Driver instructions",
          "description": "The carrier's instructions that are sent to the driver for the load.",
          "type": "string",
          "maxLength": 4096
        },
        "status": {
          "title": "Status",
          "description": "The current status of the load.",
          "type": "string",
          "enum": [
            "new",
            "accepted",
            "assigned",
            "picked-up",
            "delivered",
            "archived"
          ],
          "readOnly": true
        },
        "first_available_date": {
          "title": "First available date",
          "description": "The first date on which the load is available for picking up.",
          "type": "string",
          "format": "date"
        },
        "enclosed_trailer": {
          "title": "Enclosed trailer",
          "description": "Indicates whether the shipper requires the load to be transported with an enclosed car carrier trailer.",
          "type": "boolean"
        },
        "dispatch_date": {
          "title": "Dispatch date",
          "description": "The date when the load was dispatched to the carrier.",
          "type": "string",
          "format": "date"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the load was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the load was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "requested_bol_address_pickup": {
          "title": "Requested bol address pickup",
          "description": "The email address specified by the pickup contact to which Ship.Cars sends a copy of the load BOL.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "requested_bol_address_delivery": {
          "title": "Requested bol address delivery",
          "description": "The email address specified by the delivery contact to which Ship.Cars sends a copy of the load BOL.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "seen_by_driver_time": {
          "title": "Seen by driver time",
          "description": "The date and time when the driver first saw the assigned load in the Ship.Cars mobile app.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "flags": {
          "title": "Flags",
          "description": "A list of flags for major events in the load processing flow.",
          "type": "array",
          "items": {
            "title": "Flags",
            "type": "string",
            "maxLength": 64
          },
          "readOnly": true
        },
        "resolution": {
          "title": "Resolution",
          "description": "The final resolution of the load that specifies the reason for archiving the load.",
          "type": "string",
          "enum": [
            "declined",
            "expired",
            "cancelled",
            "broker_cancelled",
            "done"
          ],
          "readOnly": true
        },
        "expiration_time": {
          "title": "Expiration time",
          "description": "The date and time of the dispatch expiration. The carrier company needs to confirm accepting the dispatched load by this time.",
          "type": "string",
          "format": "date-time"
        },
        "invoice_time": {
          "title": "Invoice time",
          "description": "The date and time when the invoice for the load was generated.",
          "type": "string",
          "format": "date-time"
        },
        "damages_type": {
          "title": "Damages type",
          "description": "The type of damage standard used for vehicles in the load.",
          "type": "string",
          "enum": [
            "standard",
            "m-22"
          ]
        },
        "carrier": {
          "title": "Carrier",
          "description": "The identifier of the carrier company to which the load is dispatched.",
          "type": "string",
          "format": "uri",
          "default": "https://qa.ship.cars/api/companies/ok2o/"
        },
        "demo_owner": {
          "title": "Demo owner",
          "description": "The identifier of the user who created the demo load.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "active_change": {
          "title": "Active change",
          "description": "The identifier of the latest change from an active revision for the load.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "active_revision": {
          "title": "Active revision",
          "description": "The identifier of the active revision for the load.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "driver": {
          "title": "Driver",
          "description": "The identifier of the driver to whom the load is assigned.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "broker_id": {
          "title": "Broker id",
          "description": "The identifier of the shipper company that created the load.",
          "type": "string",
          "readOnly": true
        },
        "carrier_id": {
          "title": "Carrier id",
          "description": "The identifier of the carrier company to which the load is dispatched.",
          "type": "string",
          "readOnly": true
        },
        "demo_owner_id": {
          "title": "Demo owner id",
          "description": "The identifier of the user who created the demo load.",
          "type": "string",
          "readOnly": true
        },
        "active_change_id": {
          "title": "Active change id",
          "description": "The identifier of the latest change from an active revision for the load.",
          "type": "string",
          "readOnly": true
        },
        "active_revision_id": {
          "title": "Active revision id",
          "description": "The identifier of the active revision for the load.",
          "type": "string",
          "readOnly": true
        },
        "driver_id": {
          "title": "Driver id",
          "description": "The identifier of the driver to whom the load is assigned.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Company": {
      "required": [
        "name",
        "next_invoice_number"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "features": {
          "title": "Features",
          "description": "A list of the Ship.Cars features to which the company has access.",
          "type": "array",
          "items": {
            "description": "A list of the Ship.Cars features to which the company has access.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "labels": {
          "title": "Labels",
          "description": "An object with the labels that are set to the company.",
          "type": "string",
          "readOnly": true
        },
        "mandatory_tac": {
          "title": "Mandatory tac",
          "type": "string",
          "readOnly": true
        },
        "slug": {
          "title": "Slug",
          "description": "The unique slug of the company resource.",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 128
        },
        "name": {
          "title": "Name",
          "description": "The company's full name.",
          "type": "string",
          "maxLength": 256
        },
        "is_broker": {
          "title": "Is broker",
          "description": "Indicates whether this is a shipper company.",
          "type": "boolean"
        },
        "is_carrier": {
          "title": "Is carrier",
          "description": "Indicates whether this is a carrier company.",
          "type": "boolean"
        },
        "is_single_owner_operator": {
          "title": "Is single owner operator",
          "description": "Indicates whether this is an owner-operator carrier company.",
          "type": "boolean"
        },
        "dot_number": {
          "title": "USDOT Number",
          "description": "The company's USDOT number.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "address": {
          "title": "Address",
          "description": "The street name and number from the company's registered address.",
          "type": "string",
          "maxLength": 1024
        },
        "city": {
          "title": "City",
          "description": "The city name from the company's registered address.",
          "type": "string",
          "maxLength": 256
        },
        "state": {
          "title": "State",
          "description": "The two-letter abbreviation of the state from the company's registered address.",
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AS",
            "AZ",
            "AR",
            "AA",
            "AE",
            "AP",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FL",
            "GA",
            "GU",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "MP",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VI",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "zip": {
          "title": "Zip",
          "description": "The zip code from the company's registered address.",
          "type": "string",
          "maxLength": 10
        },
        "logo": {
          "title": "Logo",
          "description": "The URL of the image file with the company logo.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "email": {
          "title": "Email",
          "description": "The company's registered email address.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "phone_1": {
          "title": "Phone",
          "description": "The company's first contact number.",
          "type": "string",
          "maxLength": 20
        },
        "phone_1_notes": {
          "title": "Phone 1 notes",
          "description": "Additional notes about the company's first contact number.",
          "type": "string",
          "maxLength": 256
        },
        "phone_1_type": {
          "title": "Phone 1 type",
          "description": "The type of the company's first contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "phone_2": {
          "title": "Phone 2",
          "description": "The company's second contact number.",
          "type": "string",
          "maxLength": 20
        },
        "phone_2_notes": {
          "title": "Phone 2 notes",
          "description": "Additional notes about the company's second contact number.",
          "type": "string",
          "maxLength": 256
        },
        "phone_2_type": {
          "title": "Phone 2 type",
          "description": "The type of the company's second contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "phone_3": {
          "title": "Phone 3",
          "description": "The company's third contact number.",
          "type": "string",
          "maxLength": 20
        },
        "phone_3_notes": {
          "title": "Phone 3 notes",
          "description": "Additional notes about the company's third contact number.",
          "type": "string",
          "maxLength": 256
        },
        "phone_3_type": {
          "title": "Phone 3 type",
          "description": "The type of the company's third contact number.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "accounting_email": {
          "title": "Accounting email",
          "description": "The company's registered email address for accounting purposes.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "accounting_phone_1": {
          "title": "Phone",
          "description": "The company's first contact number for accounting purposes.",
          "type": "string",
          "maxLength": 20
        },
        "accounting_phone_1_notes": {
          "title": "Accounting phone 1 notes",
          "description": "Additional notes about the company's first contact number for accounting purposes.",
          "type": "string",
          "maxLength": 256
        },
        "accounting_phone_1_type": {
          "title": "Accounting phone 1 type",
          "description": "The type of the company's first contact number for accounting purposes.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "accounting_phone_2": {
          "title": "Accounting phone 2",
          "description": "The company's second contact number for accounting purposes.",
          "type": "string",
          "maxLength": 20
        },
        "accounting_phone_2_notes": {
          "title": "Accounting phone 2 notes",
          "description": "Additional notes about the company's second contact number for accounting purposes.",
          "type": "string",
          "maxLength": 256
        },
        "accounting_phone_2_type": {
          "title": "Accounting phone 2 type",
          "description": "The type of the company's second contact number for accounting purposes.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "accounting_phone_3": {
          "title": "Accounting phone 3",
          "description": "The company's third contact number for accounting purposes.",
          "type": "string",
          "maxLength": 20
        },
        "accounting_phone_3_notes": {
          "title": "Accounting phone 3 notes",
          "description": "Additional notes about the company's third contact number for accounting purposes.",
          "type": "string",
          "maxLength": 256
        },
        "accounting_phone_3_type": {
          "title": "Accounting phone 3 type",
          "description": "The type of the company's third contact number for accounting purposes.",
          "type": "string",
          "enum": [
            "phone",
            "fax"
          ]
        },
        "accounting_address": {
          "title": "Accounting address",
          "description": "The street name and number from the company's registered address for accounting purposes.",
          "type": "string",
          "maxLength": 1024
        },
        "accounting_city": {
          "title": "Accounting city",
          "description": "The city name from the company's registered address for accounting purposes.",
          "type": "string",
          "maxLength": 256
        },
        "accounting_state": {
          "title": "Accounting state",
          "description": "The two-letter abbreviation of the state from the company's registered address for accounting purposes.",
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AS",
            "AZ",
            "AR",
            "AA",
            "AE",
            "AP",
            "CA",
            "CO",
            "CT",
            "DE",
            "DC",
            "FL",
            "GA",
            "GU",
            "HI",
            "ID",
            "IL",
            "IN",
            "IA",
            "KS",
            "KY",
            "LA",
            "ME",
            "MD",
            "MA",
            "MI",
            "MN",
            "MS",
            "MO",
            "MT",
            "NE",
            "NV",
            "NH",
            "NJ",
            "NM",
            "NY",
            "NC",
            "ND",
            "MP",
            "OH",
            "OK",
            "OR",
            "PA",
            "PR",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VI",
            "VA",
            "WA",
            "WV",
            "WI",
            "WY"
          ]
        },
        "accounting_zip": {
          "title": "Accounting zip",
          "description": "The zip code from the company's registered address for accounting purposes.",
          "type": "string",
          "maxLength": 10
        },
        "terms_of_service": {
          "title": "Terms of service",
          "description": "The company's terms of service that are used for transactions with other parties.",
          "type": "string"
        },
        "test": {
          "title": "Test",
          "description": "Indicates whether this is a test company.",
          "type": "boolean"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the company resource was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the company resource was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "internal_link_format": {
          "title": "Internal link format",
          "description": "FIX_ME The format of the internal link to the company resource.",
          "type": "string",
          "maxLength": 256
        },
        "invoice_enabled": {
          "title": "Invoice enabled",
          "description": "Indicates whether the automatic generation of invoices is enabled for the company.",
          "type": "boolean"
        },
        "invoice_prefix": {
          "title": "Invoice prefix",
          "description": "The configured prefix that is appended to the reference numbers of invoices generated for the company.",
          "type": "string",
          "maxLength": 5
        },
        "next_invoice_number": {
          "title": "Next invoice number",
          "description": "The reference number to be used for the next invoice generated for the company.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "company_owner": {
          "title": "Company owner",
          "description": "The identifier of the user who is the company owner.",
          "type": "string",
          "format": "uri"
        },
        "company_owner_id": {
          "title": "Company owner id",
          "description": "The identifier of the user who is the company owner.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CompanyDeleteLabel": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "description": "The key of the label that is removed.",
          "type": "string"
        }
      }
    },
    "CompanySetLabel": {
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "description": "The value of the label key (a label is represented by a key-value pair). A label key is unique per company.",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The value of the label value (a label is represented by a key-value pair).",
          "type": "string"
        }
      }
    },
    "CompanyLabels": {
      "required": [
        "labels"
      ],
      "type": "object",
      "properties": {
        "labels": {
          "title": "Labels",
          "description": "An object with the labels that are set to the company. Each label is represented by a key-value pair.",
          "type": "string"
        }
      }
    },
    "Change": {
      "required": [
        "object",
        "revision"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "object": {
          "title": "Object",
          "description": "Details about the unique identifier and the resource type of the extra object affected by the event.",
          "type": "string"
        },
        "new_values": {
          "title": "New values",
          "description": "An object with the attributes that are modified within the change with their new values.",
          "type": "object",
          "properties": {
            "tedst123213": {
              "type": "string"
            },
            "test2": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "original_values": {
          "title": "Original values",
          "description": "An object with a snapshot of the original resource before the change.",
          "type": "object",
          "properties": {
            "tedst123213": {
              "type": "string"
            },
            "test2": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "creating": {
          "title": "Creating",
          "description": "Indicates whether the change adds a new vehicle.",
          "type": "boolean"
        },
        "deleting": {
          "title": "Deleting",
          "description": "Indicates whether the change removes an existing vehicle.",
          "type": "boolean"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the change was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the change was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "revision": {
          "title": "Revision",
          "description": "The identifier of the revision that contains the change.",
          "type": "string",
          "format": "uri"
        },
        "revision_id": {
          "title": "Revision id",
          "description": "The identifier of the revision that contains the change.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DownloadInvoices": {
      "required": [
        "from_date",
        "to_date"
      ],
      "type": "object",
      "properties": {
        "from_date": {
          "title": "From date",
          "description": "The start date from which all invoices are downloaded.",
          "type": "string",
          "format": "date-time"
        },
        "to_date": {
          "title": "To date",
          "description": "The end date up to which all invoices are downloaded.",
          "type": "string",
          "format": "date-time"
        },
        "download_format": {
          "title": "Download format",
          "description": "The file format in which the invoices are downloaded.",
          "type": "string",
          "default": "zip"
        }
      }
    },
    "SetCompanyLogo": {
      "required": [
        "logo"
      ],
      "type": "object",
      "properties": {
        "logo": {
          "title": "Logo",
          "description": "The URL of the image file with the company logo.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        }
      }
    },
    "SetInvoiceGeneration": {
      "required": [
        "invoice_enabled"
      ],
      "type": "object",
      "properties": {
        "invoice_enabled": {
          "title": "Invoice enabled",
          "description": "Indicates whether the automatic invoice generation is enabled for the company.",
          "type": "boolean"
        }
      }
    },
    "SetTermsOfService": {
      "required": [
        "terms_of_service"
      ],
      "type": "object",
      "properties": {
        "terms_of_service": {
          "title": "Terms of service",
          "description": "The company's terms of service that are used for transactions with other parties.",
          "type": "string"
        }
      }
    },
    "EventSubscription": {
      "required": [
        "external_id"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The identifier of the event subscription.",
          "type": "string",
          "readOnly": true
        },
        "user": {
          "title": "User",
          "description": "The identifier of the user who is subscribed for event notifications.",
          "type": "string"
        },
        "external_id": {
          "title": "External id",
          "description": "FIX_ME The external identifier of the event subscription.",
          "type": "string",
          "maxLength": 255
        },
        "send_notification": {
          "title": "Send notification",
          "description": "Indicates whether notifications are sent for this event subscription.",
          "type": "boolean"
        },
        "failures": {
          "title": "Failures",
          "description": "The number of failed attempts for posting notifications for this event subscription.",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "description": "The type of the pub/sub messaging service to which notifications are posted FIX_ME.",
          "type": "string",
          "enum": [
            "fcm",
            "pubsub",
            "sqs"
          ]
        }
      }
    },
    "AssignDriver": {
      "required": [
        "driver"
      ],
      "type": "object",
      "properties": {
        "driver": {
          "title": "Driver",
          "description": "The URL of the user resource for the driver to whom the load is assigned.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "CancelOrder": {
      "required": [
        "cancel_reason"
      ],
      "type": "object",
      "properties": {
        "cancel_reason": {
          "title": "Cancel reason",
          "description": "The unique slug of the reason given by a carrier for cancelling an accepted load.",
          "type": "string"
        }
      }
    },
    "DeclineOrder": {
      "required": [
        "decline_reason"
      ],
      "type": "object",
      "properties": {
        "decline_reason": {
          "title": "Decline reason",
          "description": "The unique slug of the reason given by a carrier for declining a dispatched load.",
          "type": "string"
        }
      }
    },
    "Dispatch": {
      "type": "object",
      "properties": {
        "carrier_dot": {
          "title": "Carrier dot",
          "description": "The URL of the carrier company resource from the `/api/carriers/{dot_number}/` endpoint. Either `carrier_dot` or `carrier` is required.",
          "type": "string",
          "format": "uri"
        },
        "carrier": {
          "title": "Carrier",
          "description": "The URL of the carrier company resource from the `/api/companies/{id}/` endpoint. Either `carrier_dot` or `carrier` is required.",
          "type": "string",
          "format": "uri"
        },
        "expiration_time": {
          "title": "Expiration time",
          "description": "The date and time of the dispatch expiration.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SendBoL": {
      "required": [
        "destination"
      ],
      "type": "object",
      "properties": {
        "destination": {
          "title": "Destination",
          "description": "The email address of the BOL recipient.",
          "type": "string"
        }
      }
    },
    "DriverInstructions": {
      "required": [
        "instructions"
      ],
      "type": "object",
      "properties": {
        "instructions": {
          "title": "Instructions",
          "description": "The carrier's instructions that are sent to the driver.",
          "type": "string",
          "maxLength": 4096
        }
      }
    },
    "Offer": {
      "description": "A list of the offers in the negotiation thread.",
      "required": [
        "offer",
        "negotiation",
        "company"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "description": "The current status of the offer.",
          "type": "string",
          "maxLength": 64
        },
        "offer": {
          "title": "Offer",
          "description": "An object with the offer details.",
          "type": "string"
        },
        "expiration_time": {
          "title": "Expiration time",
          "description": "The date and time when the offer expires.",
          "type": "string",
          "format": "date-time"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the offer was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the offer was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "negotiation": {
          "title": "Negotiation",
          "description": "The identifier of the negotiation thread that contains the offer.",
          "type": "string",
          "format": "uri"
        },
        "company": {
          "title": "Company",
          "description": "The identifier of the company that is making the offer.",
          "type": "string",
          "format": "uri"
        },
        "negotiation_id": {
          "title": "Negotiation id",
          "description": "The identifier of the negotiation thread that contains the offer.",
          "type": "string",
          "readOnly": true
        },
        "company_id": {
          "title": "Company id",
          "description": "The identifier of the company that is making the offer.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Negotiation": {
      "required": [
        "last_offer",
        "carrier",
        "broker"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "offers": {
          "title": "Offers",
          "description": "A list of the offers in the negotiation thread.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Offer"
          },
          "readOnly": true
        },
        "last_offer": {
          "$ref": "#/definitions/Offer"
        },
        "status": {
          "title": "Status",
          "description": "The current status of the negotiation.",
          "type": "string",
          "maxLength": 64
        },
        "original_price": {
          "title": "Original price",
          "description": "The original carrier payment amount from the time when the load was posted to the loadboard.",
          "type": "string",
          "format": "decimal"
        },
        "is_book_attempt": {
          "title": "Is book attempt",
          "description": "Indicates whether the latest carrier offer is a booking attempt.",
          "type": "boolean"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the negotiation thread started.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the negotiation thread was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "order": {
          "title": "Order",
          "description": "The identifier of the load to which the negotiation applies.",
          "type": "string",
          "format": "uri"
        },
        "carrier": {
          "title": "Carrier",
          "description": "The identifier of the carrier company that is negotiating for the load.",
          "type": "string",
          "format": "uri"
        },
        "broker": {
          "title": "Broker",
          "description": "The identifier of the shipper company that posted the load.",
          "type": "string",
          "format": "uri"
        },
        "last_offer_id": {
          "title": "Last offer id",
          "description": "An object with the latest offer details.",
          "type": "string",
          "readOnly": true
        },
        "order_id": {
          "title": "Order id",
          "description": "The identifier of the load to which the negotiation applies.",
          "type": "string",
          "readOnly": true
        },
        "carrier_id": {
          "title": "Carrier id",
          "description": "The identifier of the carrier company that is negotiating for the load.",
          "type": "string",
          "readOnly": true
        },
        "broker_id": {
          "title": "Broker id",
          "description": "The identifier of the shipper company that posted the load.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NegotiationAccept": {
      "required": [
        "offer"
      ],
      "type": "object",
      "properties": {
        "offer": {
          "title": "Offer",
          "description": "The identifier of the latest offer in the negotiation thread.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "Notification": {
      "required": [
        "event_type",
        "event_type_category",
        "extra_object",
        "order"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "event_type": {
          "title": "Event type",
          "description": "The type of the event that triggered the notification. Valid values include `dispatched`, `accepted`, `assigned`, `picked-up`, `delivered`, `will_expire`, `expired`, `shipper_change`, and `change_accepted`.",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$"
        },
        "event_type_category": {
          "title": "Event type category",
          "description": "The category of the event that triggered the notification. Valid values are `general`, `driver`, `shipper`, and `loadboard`.",
          "type": "string"
        },
        "demo": {
          "title": "Demo",
          "description": "Indicates whether this is a demo notification.",
          "type": "boolean",
          "readOnly": true
        },
        "actor_company": {
          "title": "Actor company",
          "description": "The identifier of the company with which the actor user is associated.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "extra_object": {
          "title": "Extra object",
          "description": "Details about the unique identifier and the resource type of the extra object affected by the event.",
          "type": "string"
        },
        "carrier": {
          "title": "Carrier",
          "description": "The identifier of the carrier company to which the affected load is dispatched.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "broker": {
          "title": "Broker",
          "description": "The identifier of the shipper company that created the affected load.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "read": {
          "title": "Read",
          "description": "Indicates whether the user to whom the notification is sent has read it.",
          "type": "string",
          "readOnly": true
        },
        "seen": {
          "title": "Seen",
          "description": "Indicates whether the user to whom the notification is sent has seen it.",
          "type": "string",
          "readOnly": true
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "The date and time when the notification was generated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "order": {
          "title": "Order",
          "description": "The identifier of the load to which the event that triggered the notification is related.",
          "type": "string",
          "format": "uri"
        },
        "actor": {
          "title": "Actor",
          "description": "The identifier of the user whose actions lead to the event that triggered the notification.",
          "type": "string",
          "format": "uri"
        },
        "actor_company_id": {
          "title": "Actor company id",
          "description": "The identifier of the company with which the actor user is associated.",
          "type": "string",
          "readOnly": true
        },
        "carrier_id": {
          "title": "Carrier id",
          "description": "The identifier of the carrier company to which the affected load is dispatched.",
          "type": "string",
          "readOnly": true
        },
        "broker_id": {
          "title": "Broker id",
          "description": "The identifier of the shipper company that created the affected load.",
          "type": "string",
          "readOnly": true
        },
        "order_id": {
          "title": "Order id",
          "description": "The identifier of the load to which the event that triggered the notification is related.",
          "type": "string",
          "readOnly": true
        },
        "actor_id": {
          "title": "Actor id",
          "description": "The identifier of the user whose actions lead to the event that triggered the notification.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ListMarkNotification": {
      "required": [
        "timestamp",
        "mark_as"
      ],
      "type": "object",
      "properties": {
        "timestamp": {
          "title": "Timestamp",
          "description": "The date and time of the boundary for marking notifications - all notifications that were generated before this time are marked as specified in the `mark_as` attribute.",
          "type": "string",
          "format": "date-time"
        },
        "category": {
          "title": "Category",
          "description": "The event category of the notifications that are marked as specified in the `mark_as` attribute.",
          "type": "string",
          "maxLength": 64
        },
        "mark_as": {
          "title": "Mark as",
          "description": "Specifies how the notifications are marked.",
          "type": "string",
          "enum": [
            "read",
            "seen"
          ]
        }
      }
    },
    "MarkNotification": {
      "required": [
        "mark_as"
      ],
      "type": "object",
      "properties": {
        "mark_as": {
          "title": "Mark as",
          "description": "Specifies how the notification is marked.",
          "type": "string",
          "enum": [
            "read",
            "seen"
          ]
        }
      }
    },
    "Claim": {
      "required": [
        "pickup_date",
        "delivery_date"
      ],
      "type": "object",
      "properties": {
        "pickup_date": {
          "title": "Pickup date",
          "description": "The estimated pickup date specified by the carrier company in the booking request.",
          "type": "string",
          "format": "date"
        },
        "delivery_date": {
          "title": "Delivery date",
          "description": "The estimated delivery date specified by the carrier company in the booking request.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "Revision": {
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "changes": {
          "title": "Changes",
          "description": "A list of the changes within the revision.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Change"
          },
          "readOnly": true
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the revision was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the revision was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "description": "The current status of the revision.",
          "type": "string",
          "enum": [
            "pending",
            "accepted",
            "declined"
          ]
        },
        "status_change": {
          "title": "Status change",
          "description": "The date and time when the revision status last changed.",
          "type": "string",
          "format": "date-time"
        },
        "contract": {
          "title": "Contract",
          "description": "The identifier of the load to which the revision applies.",
          "type": "string",
          "format": "uri"
        },
        "status_change_actor": {
          "title": "Status change actor",
          "description": "The identifier of the user who triggered the latest revision status change.",
          "type": "string",
          "format": "uri"
        },
        "contract_id": {
          "title": "Contract id",
          "description": "The identifier of the load to which the revision applies.",
          "type": "string",
          "readOnly": true
        },
        "status_change_actor_id": {
          "title": "Status change actor id",
          "description": "The identifier of the user who triggered the latest revision status change.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Role": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "custom_permissions": {
          "title": "Custom permissions",
          "description": "A list of the custom permissions that are assigned to the user role.",
          "type": "array",
          "items": {
            "description": "A list of the custom permissions that are assigned to the user role.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "extra_custom_permissions": {
          "title": "Extra custom permissions",
          "description": "A list of extra custom permissions that are assigned to the user role.",
          "type": "array",
          "items": {
            "description": "A list of extra custom permissions that are assigned to the user role.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "name": {
          "title": "Name",
          "description": "The name of the user role.",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "SignUp": {
      "required": [
        "name",
        "phone_number",
        "email",
        "company"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64
        },
        "phone_number": {
          "title": "Phone number",
          "type": "string"
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email"
        },
        "company": {
          "title": "Company",
          "type": "string",
          "maxLength": 64
        }
      }
    },
    "Truck": {
      "title": "Truck",
      "description": "An object with the details of the car carrier trailer associated with the user. Applicable only to driver users.",
      "required": [
        "label",
        "driver"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "capacity": {
          "title": "Capacity",
          "description": "The capacity of the car carrier trailer.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "enclosed": {
          "title": "Enclosed",
          "description": "Indicates whether the car carrier trailed is enclosed.",
          "type": "boolean"
        },
        "label": {
          "title": "Label",
          "description": "The label applied to this car carrier trailer.",
          "type": "string",
          "maxLength": 256
        },
        "driver": {
          "title": "Driver",
          "description": "The identifier of the driver user with whom this car carrier trailer is associated.",
          "type": "string",
          "format": "uri"
        }
      },
      "readOnly": true
    },
    "User": {
      "required": [
        "profile_picture_thumbnail"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "last_ping": {
          "title": "Last ping",
          "description": "A GeoJSON object with the location from the latest location inquiry for the user.",
          "type": "string",
          "readOnly": true
        },
        "last_ping_timestamp": {
          "title": "Last ping timestamp",
          "description": "The date and time of the latest location inquiry for the user.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "truck": {
          "$ref": "#/definitions/Truck"
        },
        "company": {
          "$ref": "#/definitions/Company"
        },
        "roles": {
          "title": "Roles",
          "description": "A list of the user roles that are assigned to the user.",
          "type": "array",
          "items": {
            "description": "A list of the user roles that are assigned to the user.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "is_company_owner": {
          "title": "Is company owner",
          "description": "Indicates whether the user is the owner of the associated company.",
          "type": "boolean",
          "readOnly": true
        },
        "has_mobile_login": {
          "title": "Has mobile login",
          "description": "Indicates whether the user is allowed to use the Ship.Cars mobile application.",
          "type": "boolean",
          "readOnly": true
        },
        "custom_permissions": {
          "title": "Custom permissions",
          "description": "A list of the custom permissions that are assigned to the user.",
          "type": "array",
          "items": {
            "description": "A list of the custom permissions that are assigned to the user.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "available_custom_permissions": {
          "title": "Available custom permissions",
          "description": "A list of the custom permissions that are available to the user.",
          "type": "array",
          "items": {
            "description": "A list of the custom permissions that are available to the user.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "all_permissions": {
          "title": "All permissions",
          "description": "A list of all permissions that are assigned to the user.",
          "type": "array",
          "items": {
            "description": "A list of all permissions that are assigned to the user.",
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "profile_picture_thumbnail": {
          "title": "Profile picture thumbnail",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "last_login": {
          "title": "Last login",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email": {
          "title": "Email address",
          "description": "The user's registered email address.",
          "type": "string",
          "format": "email",
          "readOnly": true
        },
        "unconfirmed_email": {
          "title": "Unconfirmed email",
          "description": "The user's unconfirmed email address.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "old_email": {
          "title": "Old email",
          "description": "The user's previous email address.",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "phone_number": {
          "title": "Phone",
          "description": "The user's registered phone number.",
          "type": "string",
          "readOnly": true
        },
        "unconfirmed_phone_number": {
          "title": "Unconfirmed phone number",
          "description": "The user's unconfirmed phone number.",
          "type": "string",
          "maxLength": 20
        },
        "old_phone_number": {
          "title": "Old phone number",
          "description": "The user's previous phone number.",
          "type": "string",
          "maxLength": 20
        },
        "full_name": {
          "title": "Full name",
          "description": "The user's full name.",
          "type": "string",
          "maxLength": 60
        },
        "display_name": {
          "title": "Display name",
          "description": "The user's display name.",
          "type": "string",
          "maxLength": 60
        },
        "additional_phone_number": {
          "title": "Additional phone number",
          "description": "The user's additional phone number.",
          "type": "string",
          "maxLength": 64
        },
        "time_zone": {
          "title": "Time zone",
          "description": "The user's time zone.",
          "type": "string",
          "maxLength": 64
        },
        "external_id": {
          "title": "External id",
          "description": "The user's external identifier that is used by the company with which the user is associated.",
          "type": "string",
          "maxLength": 64
        },
        "is_active": {
          "title": "Active",
          "description": "Indicates whether the user account is active. You're advised to set this to `false` instead of deleting a user account.",
          "type": "boolean",
          "readOnly": true
        },
        "date_joined": {
          "title": "Date joined",
          "description": "The date and time when the user joined Ship.Cars.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "is_driver": {
          "title": "Is driver",
          "description": "Indicates whether the user is a driver.",
          "type": "boolean"
        },
        "truck_capacity": {
          "title": "Truck capacity",
          "description": "The capacity of the car carrier trailer of the user. Applicable only to driver users.",
          "type": "integer",
          "maximum": 15,
          "minimum": 1
        },
        "truck_enclosed": {
          "title": "Truck enclosed",
          "description": "Indicates whether the car carrier trailer of the user is enclosed. Applicable only to driver users.",
          "type": "boolean"
        },
        "truck_handles_inoperable": {
          "title": "Truck handles inoperable",
          "description": "Indicates whether the car carrier trailer of the user is equipped to handle inoperable vehicles. Applicable only to driver users.",
          "type": "boolean"
        },
        "signature": {
          "title": "Signature",
          "description": "The URL of the image file with the user's signature.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "profile_picture": {
          "title": "Profile picture",
          "description": "The URL of user's profile picture.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "debug": {
          "title": "Debug",
          "description": "Indicates whether the debug logging level is enabled for the user.",
          "type": "boolean",
          "readOnly": true
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the user resource was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the user resource was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "what_is_new_last_seen": {
          "title": "What is new last seen",
          "description": "The date and time when the user last viewed the news feed. FIX_ME",
          "type": "string",
          "format": "date-time"
        },
        "demo": {
          "title": "Demo",
          "description": "Indicates whether this is a demo user.",
          "type": "boolean"
        },
        "has_accepted_loadboard_terms": {
          "title": "Has accepted loadboard terms",
          "description": "Indicates whether the user has accepted the loadboard terms of use.",
          "type": "boolean",
          "readOnly": true
        },
        "loadboard_terms_accept_time": {
          "title": "Loadboard terms accept time",
          "description": "The date and time when the user accepted the loadboard terms of use.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "loadboard_terms_accept_ip": {
          "title": "Loadboard terms accept ip",
          "description": "The IP address from which the user accepted the loadboard terms of use.",
          "type": "string",
          "readOnly": true
        },
        "has_accepted_terms": {
          "title": "Has accepted terms",
          "description": "Indicates whether the user has accepted the Ship.Cars terms of use.",
          "type": "boolean",
          "readOnly": true
        },
        "terms_accept_time": {
          "title": "Terms accept time",
          "description": "The date and time when the user accepted the Ship.Cars terms of use.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "terms_accept_ip": {
          "title": "Terms accept ip",
          "description": "The IP address from which the user accepted the Ship.Cars terms of use.",
          "type": "string",
          "readOnly": true
        },
        "company_id": {
          "title": "Company id",
          "description": "An object with the details of the company with which the user is associated.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CreateDriver": {
      "required": [
        "full_name",
        "phone_number",
        "truck_capacity",
        "truck_enclosed",
        "truck_handles_inoperable"
      ],
      "type": "object",
      "properties": {
        "full_name": {
          "title": "Full name",
          "description": "The driver's full name.",
          "type": "string",
          "maxLength": 60
        },
        "profile_picture": {
          "title": "Profile picture",
          "description": "The URL of the driver's profile picture.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "phone_number": {
          "title": "Phone number",
          "description": "The driver's phone number.",
          "type": "string"
        },
        "additional_phone_number": {
          "title": "Additional phone number",
          "description": "The driver's additional phone number.",
          "type": "string",
          "maxLength": 64
        },
        "truck_capacity": {
          "title": "Truck capacity",
          "description": "The capacity of the driver's car carrier trailer.",
          "type": "integer",
          "maximum": 15,
          "minimum": 1
        },
        "truck_enclosed": {
          "title": "Truck enclosed",
          "description": "Indicates whether the driver's car carrier trailer is enclosed.",
          "type": "boolean"
        },
        "truck_handles_inoperable": {
          "title": "Truck handles inoperable",
          "description": "Indicates whether the driver's car carrier trailer is equipped to handle inoperable vehicles.",
          "type": "boolean"
        }
      }
    },
    "CreateUser": {
      "required": [
        "full_name",
        "email",
        "role"
      ],
      "type": "object",
      "properties": {
        "full_name": {
          "title": "Full name",
          "description": "The user's full name.",
          "type": "string",
          "maxLength": 60
        },
        "email": {
          "title": "Email",
          "description": "The user's email address.",
          "type": "string",
          "format": "email"
        },
        "profile_picture": {
          "title": "Profile picture",
          "description": "The URL of the user's profile picture.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "role": {
          "title": "Role",
          "description": "The user role that is set for the user.",
          "type": "string"
        },
        "custom_permissions": {
          "title": "Custom permissions",
          "description": "A list of custom permissions that are set for the user account.",
          "type": "array",
          "items": {
            "description": "A list of custom permissions that are set for the user account.",
            "type": "string"
          },
          "uniqueItems": true
        }
      }
    },
    "EmailPhone": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "description": "FIX_ME The user's email address or phone number.",
          "type": "string"
        }
      }
    },
    "Email": {
      "required": [
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "description": "FIX_ME The user's email address.",
          "type": "string",
          "format": "email"
        }
      }
    },
    "Phone": {
      "required": [
        "phone_number"
      ],
      "type": "object",
      "properties": {
        "phone_number": {
          "title": "Phone number",
          "description": "FIX_ME The user's phone number.",
          "type": "string"
        }
      }
    },
    "ResendVerification": {
      "type": "object",
      "properties": {
        "method": {
          "title": "Method",
          "description": "The method that is used for resending the verification link.",
          "type": "string",
          "enum": [
            "sms",
            "email"
          ]
        }
      }
    },
    "SetCustomPermission": {
      "required": [
        "custom_permissions"
      ],
      "type": "object",
      "properties": {
        "custom_permissions": {
          "title": "Custom permissions",
          "description": "A list of custom permissions that are assigned to the user.",
          "type": "array",
          "items": {
            "description": "A list of custom permissions that are assigned to the user.",
            "type": "string"
          },
          "uniqueItems": true
        }
      }
    },
    "SetRole": {
      "required": [
        "role"
      ],
      "type": "object",
      "properties": {
        "role": {
          "title": "Role",
          "description": "The user role that is set to the user.",
          "type": "string"
        }
      }
    },
    "VehicleType": {
      "required": [
        "name",
        "image",
        "landscape"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "The internal name of the vehicle type.",
          "type": "string",
          "maxLength": 64
        },
        "human_name": {
          "title": "Human name",
          "description": "The human-readable name of the vehicle type.",
          "type": "string",
          "maxLength": 64
        },
        "image": {
          "title": "Image",
          "description": "The URL of the portrait mode version of the sketch for the vehicle type.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "landscape": {
          "title": "Landscape",
          "description": "The URL of the landscape mode version of the sketch for the vehicle type.",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        }
      }
    },
    "Vehicle": {
      "required": [
        "load"
      ],
      "type": "object",
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "id": {
          "title": "Id",
          "description": "The unique identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "vehicle_sketch": {
          "title": "Vehicle sketch",
          "description": "The URL of the sketch for the vehicle type (used for noting damages).",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "attachments": {
          "title": "Attachments",
          "description": "A list of attached files associated with the vehicle.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "description": "The internal name of the vehicle type.",
          "type": "string"
        },
        "human_type": {
          "title": "Human type",
          "description": "The human-readable name of the vehicle type.",
          "type": "string",
          "readOnly": true
        },
        "logo": {
          "title": "Logo",
          "description": "The URL of the logo of the vehicle manufacturer.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "m22_damages": {
          "title": "M22 damages",
          "description": "A list of damages noted for the vehicle according to the M-22 standard.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/M22Damage"
          },
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "description": "Indicates whether the vehicle is being added to the load.",
          "type": "boolean"
        },
        "deleting": {
          "title": "Deleting",
          "description": "Indicates whether the vehicle is being removed from the load.",
          "type": "boolean"
        },
        "year": {
          "title": "Year",
          "description": "The manufacture year of the vehicle (as specified by the shipper).",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "make": {
          "title": "Make",
          "description": "The make of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "model": {
          "title": "Model",
          "description": "The model of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "color": {
          "title": "Color",
          "description": "The color of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "vin": {
          "title": "Vin",
          "description": "The VIN number of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 20
        },
        "buyer_number": {
          "title": "Buyer number",
          "description": "The buyer number of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "lot_number": {
          "title": "Lot number",
          "description": "The LOT number of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 64
        },
        "operable": {
          "title": "Operable",
          "description": "Indicates whether the vehicle is in an operable condition.",
          "type": "boolean"
        },
        "broker_vehicle_id": {
          "title": "Broker vehicle id",
          "description": "The unique identifier of the vehicle (as specified by the shipper).",
          "type": "string",
          "maxLength": 256
        },
        "specifications_data": {
          "title": "Specifications data",
          "description": "The full specification data for the vehicle (including weight, length, height, and width) as retrieved from the vehicle specification database.",
          "type": "string"
        },
        "specifications_year": {
          "title": "Specifications year",
          "description": "The manufacture year of the vehicle used to retrieve data from the vehicle specification database.",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "status": {
          "title": "Status",
          "description": "The current status of the vehicle.",
          "type": "string",
          "enum": [
            "new",
            "assigned",
            "picked-up",
            "delivered"
          ],
          "default": "new"
        },
        "pickup_odometer": {
          "title": "Pickup odometer",
          "description": "The odometer reading of the vehicle as recorded by the driver at the time of pickup.",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "delivery_odometer": {
          "title": "Delivery odometer",
          "description": "The odometer reading of the vehicle as recorded by the driver at the time of delivery.",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "pickup_location": {
          "title": "Pickup location",
          "description": "A GeoJSON object with the GSP coordinates of the actual pickup location.",
          "type": "string"
        },
        "pickup_location_address": {
          "title": "Pickup location address",
          "description": "The full address of the actual pickup location as retrieved from the GPS coordinates.",
          "type": "string",
          "maxLength": 256
        },
        "delivery_location": {
          "title": "Delivery location",
          "description": "A GeoJSON object with the GSP coordinates of the actual delivery location.",
          "type": "string"
        },
        "delivery_location_address": {
          "title": "Delivery location address",
          "description": "The full address of the actual delivery location as retrieved from the GPS coordinates.",
          "type": "string",
          "maxLength": 256
        },
        "pickup_night": {
          "title": "Pickup night",
          "description": "Indicates whether it was dark at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_snow": {
          "title": "Pickup snow",
          "description": "Indicates whether it was snowing at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_rain": {
          "title": "Pickup rain",
          "description": "Indicates whether it was raining at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_dirty": {
          "title": "Pickup dirty",
          "description": "Indicates whether the vehicle was dirty at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean"
        },
        "pickup_full_name": {
          "title": "Pickup full name",
          "description": "The full name of the pickup contact who signed the BOL.",
          "type": "string",
          "maxLength": 64
        },
        "delivery_full_name": {
          "title": "Delivery full name",
          "description": "The full name of the delivery contact who signed the BOL.",
          "type": "string",
          "maxLength": 64
        },
        "delivery_exceptions": {
          "title": "Delivery exceptions",
          "description": "The delivery contact's additional notes about the exceptions added at the time of delivery.",
          "type": "string",
          "maxLength": 1024
        },
        "delivery_driver_notes": {
          "title": "Delivery driver notes",
          "description": "The driver's additional notes about the vehicle at the time of delivery.",
          "type": "string",
          "maxLength": 1024
        },
        "pickup_driver_notes": {
          "title": "Pickup driver notes",
          "description": "The driver's additional notes about the vehicle at the time of pickup.",
          "type": "string",
          "maxLength": 1024
        },
        "pickup_date": {
          "title": "Pickup date",
          "description": "The actual date when the vehicle was picked up.",
          "type": "string",
          "format": "date-time"
        },
        "pickup_no_damages": {
          "title": "Pickup no damages",
          "description": "Indicates whether the vehicle was picked up without noting any damages to it.",
          "type": "boolean"
        },
        "delivery_date": {
          "title": "Delivery date",
          "description": "The actual date when the vehicle was delivered.",
          "type": "string",
          "format": "date-time"
        },
        "delivery_no_damages": {
          "title": "Delivery no damages",
          "description": "Indicates whether the vehicle was delivered without noting any damages to it.",
          "type": "boolean"
        },
        "seen_by_driver_time": {
          "title": "Seen by driver time",
          "description": "The date and time when the driver saw the assigned load and the vehicle.",
          "type": "string",
          "format": "date-time"
        },
        "create_time": {
          "title": "Create time",
          "description": "The date and time when the vehicle was originally created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "update_time": {
          "title": "Update time",
          "description": "The date and time when the vehicle was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "active_change": {
          "title": "Active change",
          "description": "The identifier of the latest change from an active revision related to the vehicle.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "active_revision": {
          "title": "Active revision",
          "description": "The identifier of the active revision related to the vehicle.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "load": {
          "title": "Load",
          "description": "The identifier of the load of which the vehicle is part.",
          "type": "string",
          "format": "uri"
        },
        "pickup_signature_decline_reason": {
          "title": "Pickup signature decline reason",
          "description": "The identifier of the reason given by the pickup contact for declining to sign the BOL.",
          "type": "string",
          "format": "uri"
        },
        "delivery_signature_decline_reason": {
          "title": "Delivery signature decline reason",
          "description": "The identifier of the reason given by the delivery contact for declining to sign the BOL.",
          "type": "string",
          "format": "uri"
        },
        "driver": {
          "title": "Driver",
          "description": "The identifier of the driver to whom the vehicle is assigned as part of the load.",
          "type": "string",
          "format": "uri"
        },
        "active_change_id": {
          "title": "Active change id",
          "description": "The identifier of the latest change from an active revision related to the vehicle.",
          "type": "string",
          "readOnly": true
        },
        "active_revision_id": {
          "title": "Active revision id",
          "description": "The identifier of the active revision related to the vehicle.",
          "type": "string",
          "readOnly": true
        },
        "load_id": {
          "title": "Load id",
          "description": "The identifier of the load of which the vehicle is part.",
          "type": "string",
          "readOnly": true
        },
        "pickup_signature_decline_reason_id": {
          "title": "Pickup signature decline reason id",
          "description": "The identifier of the reason given by the pickup contact for declining to sign the BOL.",
          "type": "string",
          "readOnly": true
        },
        "delivery_signature_decline_reason_id": {
          "title": "Delivery signature decline reason id",
          "description": "The identifier of the reason given by the delivery contact for declining to sign the BOL.",
          "type": "string",
          "readOnly": true
        },
        "driver_id": {
          "title": "Driver id",
          "description": "The identifier of the driver to whom the vehicle is assigned as part of the load.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PickupDelviery": {
      "type": "object",
      "properties": {
        "timestamp": {
          "title": "Timestamp",
          "description": "The date and time when the pickup/delivery process was completed.",
          "type": "string",
          "format": "date-time"
        },
        "odometer_reading": {
          "title": "Odometer reading",
          "description": "The odometer reading of the vehicle as recorded by the driver.",
          "type": "string",
          "format": "decimal"
        },
        "full_name": {
          "title": "Full name",
          "description": "The full name of the pickup/delivery contact who signed the BOL.",
          "type": "string",
          "maxLength": 64
        },
        "exceptions": {
          "title": "Exceptions",
          "description": "The delivery contact's additional notes about the exceptions added at the time of delivery.",
          "type": "string",
          "maxLength": 1024
        },
        "driver_notes": {
          "title": "Driver notes",
          "description": "The driver's additional notes about the vehicle.",
          "type": "string",
          "maxLength": 1024
        },
        "email": {
          "title": "Email",
          "description": "The email address specified by the pickup/delivery contact to which Ship.Cars sends a copy of the load BOL.",
          "type": "string",
          "format": "email"
        },
        "dirty": {
          "title": "Dirty",
          "description": "Indicates whether the vehicle was dirty at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean",
          "default": false
        },
        "night": {
          "title": "Night",
          "description": "Indicates whether it was dark at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean",
          "default": false
        },
        "rain": {
          "title": "Rain",
          "description": "Indicates whether it was raining at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean",
          "default": false
        },
        "snow": {
          "title": "Snow",
          "description": "Indicates whether it was snowing at the time of pickup. This is specified by the driver as an inspection impediment.",
          "type": "boolean",
          "default": false
        },
        "location": {
          "title": "Location",
          "description": "A GeoJSON object with the GSP coordinates of the actual delivery location.",
          "type": "string"
        },
        "signature_decline_reason": {
          "title": "Signature decline reason",
          "description": "The identifier of the reason given by the pickup/delivery contact for declining to sign the BOL.",
          "type": "string"
        },
        "uship_code": {
          "title": "Uship code",
          "description": "The uShip code used for the load.",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "Odometer": {
      "required": [
        "odometer_reading"
      ],
      "type": "object",
      "properties": {
        "odometer_reading": {
          "title": "Odometer reading",
          "description": "The odometer reading of the vehicle.",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "Vin": {
      "required": [
        "vin"
      ],
      "type": "object",
      "properties": {
        "vin": {
          "title": "Vin",
          "description": "The VIN number of the vehicle.",
          "type": "string",
          "maxLength": 20
        }
      }
    }
  }
}